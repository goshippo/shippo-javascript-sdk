/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * Invalid carrier account provided by the user
 */
export type InitiateOauth2SigninCarrierAccountsResponseResponseBodyData = {
  title?: string | undefined;
  detail?: string | undefined;
};

/**
 * Invalid carrier account provided by the user
 */
export class InitiateOauth2SigninCarrierAccountsResponseResponseBody
  extends Error
{
  title?: string | undefined;
  detail?: string | undefined;

  /** The original data that was passed to this error instance. */
  data$: InitiateOauth2SigninCarrierAccountsResponseResponseBodyData;

  constructor(
    err: InitiateOauth2SigninCarrierAccountsResponseResponseBodyData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    if (err.title != null) this.title = err.title;
    if (err.detail != null) this.detail = err.detail;

    this.name = "InitiateOauth2SigninCarrierAccountsResponseResponseBody";
  }
}

/**
 * Invalid ShippoToken or unsupported carrier account provided by the user
 */
export type InitiateOauth2SigninCarrierAccountsResponseBodyData = {
  title?: string | undefined;
  detail?: string | undefined;
};

/**
 * Invalid ShippoToken or unsupported carrier account provided by the user
 */
export class InitiateOauth2SigninCarrierAccountsResponseBody extends Error {
  title?: string | undefined;
  detail?: string | undefined;

  /** The original data that was passed to this error instance. */
  data$: InitiateOauth2SigninCarrierAccountsResponseBodyData;

  constructor(err: InitiateOauth2SigninCarrierAccountsResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    if (err.title != null) this.title = err.title;
    if (err.detail != null) this.detail = err.detail;

    this.name = "InitiateOauth2SigninCarrierAccountsResponseBody";
  }
}

/**
 * Invalid parameters provided by the user
 */
export type InitiateOauth2SigninResponseBodyData = {
  title?: string | undefined;
  detail?: string | undefined;
};

/**
 * Invalid parameters provided by the user
 */
export class InitiateOauth2SigninResponseBody extends Error {
  title?: string | undefined;
  detail?: string | undefined;

  /** The original data that was passed to this error instance. */
  data$: InitiateOauth2SigninResponseBodyData;

  constructor(err: InitiateOauth2SigninResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    if (err.title != null) this.title = err.title;
    if (err.detail != null) this.detail = err.detail;

    this.name = "InitiateOauth2SigninResponseBody";
  }
}

/** @internal */
export const InitiateOauth2SigninCarrierAccountsResponseResponseBody$inboundSchema:
  z.ZodType<
    InitiateOauth2SigninCarrierAccountsResponseResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    title: z.string().optional(),
    detail: z.string().optional(),
  })
    .transform((v) => {
      return new InitiateOauth2SigninCarrierAccountsResponseResponseBody(v);
    });

/** @internal */
export type InitiateOauth2SigninCarrierAccountsResponseResponseBody$Outbound = {
  title?: string | undefined;
  detail?: string | undefined;
};

/** @internal */
export const InitiateOauth2SigninCarrierAccountsResponseResponseBody$outboundSchema:
  z.ZodType<
    InitiateOauth2SigninCarrierAccountsResponseResponseBody$Outbound,
    z.ZodTypeDef,
    InitiateOauth2SigninCarrierAccountsResponseResponseBody
  > = z.instanceof(InitiateOauth2SigninCarrierAccountsResponseResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      title: z.string().optional(),
      detail: z.string().optional(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace InitiateOauth2SigninCarrierAccountsResponseResponseBody$ {
  /** @deprecated use `InitiateOauth2SigninCarrierAccountsResponseResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    InitiateOauth2SigninCarrierAccountsResponseResponseBody$inboundSchema;
  /** @deprecated use `InitiateOauth2SigninCarrierAccountsResponseResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    InitiateOauth2SigninCarrierAccountsResponseResponseBody$outboundSchema;
  /** @deprecated use `InitiateOauth2SigninCarrierAccountsResponseResponseBody$Outbound` instead. */
  export type Outbound =
    InitiateOauth2SigninCarrierAccountsResponseResponseBody$Outbound;
}

/** @internal */
export const InitiateOauth2SigninCarrierAccountsResponseBody$inboundSchema:
  z.ZodType<
    InitiateOauth2SigninCarrierAccountsResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    title: z.string().optional(),
    detail: z.string().optional(),
  })
    .transform((v) => {
      return new InitiateOauth2SigninCarrierAccountsResponseBody(v);
    });

/** @internal */
export type InitiateOauth2SigninCarrierAccountsResponseBody$Outbound = {
  title?: string | undefined;
  detail?: string | undefined;
};

/** @internal */
export const InitiateOauth2SigninCarrierAccountsResponseBody$outboundSchema:
  z.ZodType<
    InitiateOauth2SigninCarrierAccountsResponseBody$Outbound,
    z.ZodTypeDef,
    InitiateOauth2SigninCarrierAccountsResponseBody
  > = z.instanceof(InitiateOauth2SigninCarrierAccountsResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      title: z.string().optional(),
      detail: z.string().optional(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace InitiateOauth2SigninCarrierAccountsResponseBody$ {
  /** @deprecated use `InitiateOauth2SigninCarrierAccountsResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    InitiateOauth2SigninCarrierAccountsResponseBody$inboundSchema;
  /** @deprecated use `InitiateOauth2SigninCarrierAccountsResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    InitiateOauth2SigninCarrierAccountsResponseBody$outboundSchema;
  /** @deprecated use `InitiateOauth2SigninCarrierAccountsResponseBody$Outbound` instead. */
  export type Outbound =
    InitiateOauth2SigninCarrierAccountsResponseBody$Outbound;
}

/** @internal */
export const InitiateOauth2SigninResponseBody$inboundSchema: z.ZodType<
  InitiateOauth2SigninResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  title: z.string().optional(),
  detail: z.string().optional(),
})
  .transform((v) => {
    return new InitiateOauth2SigninResponseBody(v);
  });

/** @internal */
export type InitiateOauth2SigninResponseBody$Outbound = {
  title?: string | undefined;
  detail?: string | undefined;
};

/** @internal */
export const InitiateOauth2SigninResponseBody$outboundSchema: z.ZodType<
  InitiateOauth2SigninResponseBody$Outbound,
  z.ZodTypeDef,
  InitiateOauth2SigninResponseBody
> = z.instanceof(InitiateOauth2SigninResponseBody)
  .transform(v => v.data$)
  .pipe(z.object({
    title: z.string().optional(),
    detail: z.string().optional(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace InitiateOauth2SigninResponseBody$ {
  /** @deprecated use `InitiateOauth2SigninResponseBody$inboundSchema` instead. */
  export const inboundSchema = InitiateOauth2SigninResponseBody$inboundSchema;
  /** @deprecated use `InitiateOauth2SigninResponseBody$outboundSchema` instead. */
  export const outboundSchema = InitiateOauth2SigninResponseBody$outboundSchema;
  /** @deprecated use `InitiateOauth2SigninResponseBody$Outbound` instead. */
  export type Outbound = InitiateOauth2SigninResponseBody$Outbound;
}
