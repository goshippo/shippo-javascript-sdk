/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type CreateCarrierAccountRequest = {
    /**
     * String used to pick a non-default API version to use
     */
    shippoApiVersion?: string | undefined;
    /**
     * Examples.
     */
    connectExistingOwnUPSAccountRequest?:
        | components.ConnectExistingOwnUPSAccountRequest
        | undefined;
};

export type CreateCarrierAccountResponse = {
    httpMeta: components.HTTPMetadata;
    carrierAccount?: components.CarrierAccount | undefined;
};

/** @internal */
export namespace CreateCarrierAccountRequest$ {
    export type Inbound = {
        "SHIPPO-API-VERSION"?: string | undefined;
        ConnectExistingOwnUPSAccountRequest?:
            | components.ConnectExistingOwnUPSAccountRequest$.Inbound
            | undefined;
    };

    export const inboundSchema: z.ZodType<CreateCarrierAccountRequest, z.ZodTypeDef, Inbound> = z
        .object({
            "SHIPPO-API-VERSION": z.string().optional(),
            ConnectExistingOwnUPSAccountRequest:
                components.ConnectExistingOwnUPSAccountRequest$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                ...(v["SHIPPO-API-VERSION"] === undefined
                    ? null
                    : { shippoApiVersion: v["SHIPPO-API-VERSION"] }),
                ...(v.ConnectExistingOwnUPSAccountRequest === undefined
                    ? null
                    : {
                          connectExistingOwnUPSAccountRequest:
                              v.ConnectExistingOwnUPSAccountRequest,
                      }),
            };
        });

    export type Outbound = {
        "SHIPPO-API-VERSION"?: string | undefined;
        ConnectExistingOwnUPSAccountRequest?:
            | components.ConnectExistingOwnUPSAccountRequest$.Outbound
            | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateCarrierAccountRequest> = z
        .object({
            shippoApiVersion: z.string().optional(),
            connectExistingOwnUPSAccountRequest:
                components.ConnectExistingOwnUPSAccountRequest$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                ...(v.shippoApiVersion === undefined
                    ? null
                    : { "SHIPPO-API-VERSION": v.shippoApiVersion }),
                ...(v.connectExistingOwnUPSAccountRequest === undefined
                    ? null
                    : {
                          ConnectExistingOwnUPSAccountRequest:
                              v.connectExistingOwnUPSAccountRequest,
                      }),
            };
        });
}

/** @internal */
export namespace CreateCarrierAccountResponse$ {
    export type Inbound = {
        HttpMeta: components.HTTPMetadata$.Inbound;
        CarrierAccount?: components.CarrierAccount$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<CreateCarrierAccountResponse, z.ZodTypeDef, Inbound> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            CarrierAccount: components.CarrierAccount$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.CarrierAccount === undefined ? null : { carrierAccount: v.CarrierAccount }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        CarrierAccount?: components.CarrierAccount$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateCarrierAccountResponse> = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            carrierAccount: components.CarrierAccount$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
                ...(v.carrierAccount === undefined ? null : { CarrierAccount: v.carrierAccount }),
            };
        });
}
