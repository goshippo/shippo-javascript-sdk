/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type ListUserParcelTemplatesRequest = {
    /**
     * String used to pick a non-default API version to use
     */
    shippoApiVersion?: string | undefined;
};

export type ListUserParcelTemplatesResponse = {
    httpMeta: components.HTTPMetadata;
    userParcelTemplateListResponse?: Array<components.UserParcelTemplate> | undefined;
};

/** @internal */
export namespace ListUserParcelTemplatesRequest$ {
    export type Inbound = {
        "SHIPPO-API-VERSION"?: string | undefined;
    };

    export const inboundSchema: z.ZodType<ListUserParcelTemplatesRequest, z.ZodTypeDef, Inbound> = z
        .object({
            "SHIPPO-API-VERSION": z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v["SHIPPO-API-VERSION"] === undefined
                    ? null
                    : { shippoApiVersion: v["SHIPPO-API-VERSION"] }),
            };
        });

    export type Outbound = {
        "SHIPPO-API-VERSION"?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ListUserParcelTemplatesRequest> =
        z
            .object({
                shippoApiVersion: z.string().optional(),
            })
            .transform((v) => {
                return {
                    ...(v.shippoApiVersion === undefined
                        ? null
                        : { "SHIPPO-API-VERSION": v.shippoApiVersion }),
                };
            });
}

/** @internal */
export namespace ListUserParcelTemplatesResponse$ {
    export type Inbound = {
        HttpMeta: components.HTTPMetadata$.Inbound;
        userParcelTemplateListResponse?: Array<components.UserParcelTemplate$.Inbound> | undefined;
    };

    export const inboundSchema: z.ZodType<ListUserParcelTemplatesResponse, z.ZodTypeDef, Inbound> =
        z
            .object({
                HttpMeta: components.HTTPMetadata$.inboundSchema,
                userParcelTemplateListResponse: z
                    .array(components.UserParcelTemplate$.inboundSchema)
                    .optional(),
            })
            .transform((v) => {
                return {
                    httpMeta: v.HttpMeta,
                    ...(v.userParcelTemplateListResponse === undefined
                        ? null
                        : { userParcelTemplateListResponse: v.userParcelTemplateListResponse }),
                };
            });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        userParcelTemplateListResponse?: Array<components.UserParcelTemplate$.Outbound> | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        ListUserParcelTemplatesResponse
    > = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            userParcelTemplateListResponse: z
                .array(components.UserParcelTemplate$.outboundSchema)
                .optional(),
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
                ...(v.userParcelTemplateListResponse === undefined
                    ? null
                    : { userParcelTemplateListResponse: v.userParcelTemplateListResponse }),
            };
        });
}
