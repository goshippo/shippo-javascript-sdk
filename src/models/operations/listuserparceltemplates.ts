/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type ListUserParcelTemplatesGlobals = {
    /**
     * String used to pick a non-default API version to use
     */
    shippoApiVersion?: string | undefined;
};

export type ListUserParcelTemplatesRequest = {};

/** @internal */
export namespace ListUserParcelTemplatesGlobals$ {
    export const inboundSchema: z.ZodType<ListUserParcelTemplatesGlobals, z.ZodTypeDef, unknown> = z
        .object({
            "SHIPPO-API-VERSION": z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v["SHIPPO-API-VERSION"] === undefined
                    ? null
                    : { shippoApiVersion: v["SHIPPO-API-VERSION"] }),
            };
        });

    export type Outbound = {
        "SHIPPO-API-VERSION"?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ListUserParcelTemplatesGlobals> =
        z
            .object({
                shippoApiVersion: z.string().optional(),
            })
            .transform((v) => {
                return {
                    ...(v.shippoApiVersion === undefined
                        ? null
                        : { "SHIPPO-API-VERSION": v.shippoApiVersion }),
                };
            });
}

/** @internal */
export namespace ListUserParcelTemplatesRequest$ {
    export const inboundSchema: z.ZodType<ListUserParcelTemplatesRequest, z.ZodTypeDef, unknown> =
        z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ListUserParcelTemplatesRequest> =
        z.object({});
}
