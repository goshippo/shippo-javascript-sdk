/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type CreateManifestRequest = {
    /**
     * String used to pick a non-default API version to use
     */
    shippoApiVersion?: string | undefined;
    /**
     * Manifest details and contact info.
     */
    manifestCreateRequest?: components.ManifestCreateRequest | undefined;
};

export type CreateManifestResponse = {
    httpMeta: components.HTTPMetadata;
    manifest?: components.Manifest | undefined;
};

/** @internal */
export namespace CreateManifestRequest$ {
    export type Inbound = {
        "SHIPPO-API-VERSION"?: string | undefined;
        ManifestCreateRequest?: components.ManifestCreateRequest$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<CreateManifestRequest, z.ZodTypeDef, Inbound> = z
        .object({
            "SHIPPO-API-VERSION": z.string().optional(),
            ManifestCreateRequest: components.ManifestCreateRequest$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                ...(v["SHIPPO-API-VERSION"] === undefined
                    ? null
                    : { shippoApiVersion: v["SHIPPO-API-VERSION"] }),
                ...(v.ManifestCreateRequest === undefined
                    ? null
                    : { manifestCreateRequest: v.ManifestCreateRequest }),
            };
        });

    export type Outbound = {
        "SHIPPO-API-VERSION"?: string | undefined;
        ManifestCreateRequest?: components.ManifestCreateRequest$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateManifestRequest> = z
        .object({
            shippoApiVersion: z.string().optional(),
            manifestCreateRequest: components.ManifestCreateRequest$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                ...(v.shippoApiVersion === undefined
                    ? null
                    : { "SHIPPO-API-VERSION": v.shippoApiVersion }),
                ...(v.manifestCreateRequest === undefined
                    ? null
                    : { ManifestCreateRequest: v.manifestCreateRequest }),
            };
        });
}

/** @internal */
export namespace CreateManifestResponse$ {
    export type Inbound = {
        HttpMeta: components.HTTPMetadata$.Inbound;
        Manifest?: components.Manifest$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<CreateManifestResponse, z.ZodTypeDef, Inbound> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            Manifest: components.Manifest$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.Manifest === undefined ? null : { manifest: v.Manifest }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        Manifest?: components.Manifest$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateManifestResponse> = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            manifest: components.Manifest$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
                ...(v.manifest === undefined ? null : { Manifest: v.manifest }),
            };
        });
}
