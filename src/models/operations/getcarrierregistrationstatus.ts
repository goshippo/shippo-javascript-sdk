/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

/**
 * filter by specific carrier
 */
export enum Carrier {
    Ups = "ups",
    Usps = "usps",
    CanadaPost = "canada_post",
}

export type GetCarrierRegistrationStatusRequest = {
    /**
     * filter by specific carrier
     */
    carrier: Carrier;
    /**
     * String used to pick a non-default API version to use
     */
    shippoApiVersion?: string | undefined;
};

export type GetCarrierRegistrationStatusResponse = {
    httpMeta: components.HTTPMetadata;
    carrierAccountRegistrationStatus?: components.CarrierAccountRegistrationStatus | undefined;
};

/** @internal */
export const Carrier$ = z.nativeEnum(Carrier);

/** @internal */
export namespace GetCarrierRegistrationStatusRequest$ {
    export type Inbound = {
        carrier: Carrier;
        "SHIPPO-API-VERSION"?: string | undefined;
    };

    export const inboundSchema: z.ZodType<
        GetCarrierRegistrationStatusRequest,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            carrier: Carrier$,
            "SHIPPO-API-VERSION": z.string().optional(),
        })
        .transform((v) => {
            return {
                carrier: v.carrier,
                ...(v["SHIPPO-API-VERSION"] === undefined
                    ? null
                    : { shippoApiVersion: v["SHIPPO-API-VERSION"] }),
            };
        });

    export type Outbound = {
        carrier: Carrier;
        "SHIPPO-API-VERSION"?: string | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        GetCarrierRegistrationStatusRequest
    > = z
        .object({
            carrier: Carrier$,
            shippoApiVersion: z.string().optional(),
        })
        .transform((v) => {
            return {
                carrier: v.carrier,
                ...(v.shippoApiVersion === undefined
                    ? null
                    : { "SHIPPO-API-VERSION": v.shippoApiVersion }),
            };
        });
}

/** @internal */
export namespace GetCarrierRegistrationStatusResponse$ {
    export type Inbound = {
        HttpMeta: components.HTTPMetadata$.Inbound;
        CarrierAccountRegistrationStatus?:
            | components.CarrierAccountRegistrationStatus$.Inbound
            | undefined;
    };

    export const inboundSchema: z.ZodType<
        GetCarrierRegistrationStatusResponse,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            CarrierAccountRegistrationStatus:
                components.CarrierAccountRegistrationStatus$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.CarrierAccountRegistrationStatus === undefined
                    ? null
                    : { carrierAccountRegistrationStatus: v.CarrierAccountRegistrationStatus }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        CarrierAccountRegistrationStatus?:
            | components.CarrierAccountRegistrationStatus$.Outbound
            | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        GetCarrierRegistrationStatusResponse
    > = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            carrierAccountRegistrationStatus:
                components.CarrierAccountRegistrationStatus$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
                ...(v.carrierAccountRegistrationStatus === undefined
                    ? null
                    : { CarrierAccountRegistrationStatus: v.carrierAccountRegistrationStatus }),
            };
        });
}
