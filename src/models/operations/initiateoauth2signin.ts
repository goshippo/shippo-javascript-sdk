/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type InitiateOauth2SigninGlobals = {
  /**
   * Optional string used to pick a non-default API version to use. See our <a href="https://docs.goshippo.com/docs/api_concepts/apiversioning/">API version</a> guide.
   */
  shippoApiVersion?: string | undefined;
};

export type InitiateOauth2SigninRequest = {
  /**
   * The carrier account ID (UUID) to start a signin process.
   */
  carrierAccountObjectId: string;
  /**
   * Callback URL. The URL that tells the authorization server where to send the user back to after they approve the request.
   */
  redirectUri: string;
  /**
   * A random string generated by the consuming application and included in the request to prevent CSRF attacks. The consuming application checks that the same value is returned after the user authorizes Shippo.
   */
  state?: string | undefined;
};

export type InitiateOauth2SigninResponse = {
  headers: { [k: string]: Array<string> };
};

/** @internal */
export const InitiateOauth2SigninGlobals$inboundSchema: z.ZodType<
  InitiateOauth2SigninGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  "SHIPPO-API-VERSION": z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "SHIPPO-API-VERSION": "shippoApiVersion",
  });
});

/** @internal */
export type InitiateOauth2SigninGlobals$Outbound = {
  "SHIPPO-API-VERSION"?: string | undefined;
};

/** @internal */
export const InitiateOauth2SigninGlobals$outboundSchema: z.ZodType<
  InitiateOauth2SigninGlobals$Outbound,
  z.ZodTypeDef,
  InitiateOauth2SigninGlobals
> = z.object({
  shippoApiVersion: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    shippoApiVersion: "SHIPPO-API-VERSION",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace InitiateOauth2SigninGlobals$ {
  /** @deprecated use `InitiateOauth2SigninGlobals$inboundSchema` instead. */
  export const inboundSchema = InitiateOauth2SigninGlobals$inboundSchema;
  /** @deprecated use `InitiateOauth2SigninGlobals$outboundSchema` instead. */
  export const outboundSchema = InitiateOauth2SigninGlobals$outboundSchema;
  /** @deprecated use `InitiateOauth2SigninGlobals$Outbound` instead. */
  export type Outbound = InitiateOauth2SigninGlobals$Outbound;
}

/** @internal */
export const InitiateOauth2SigninRequest$inboundSchema: z.ZodType<
  InitiateOauth2SigninRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  CarrierAccountObjectId: z.string(),
  redirect_uri: z.string(),
  state: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "CarrierAccountObjectId": "carrierAccountObjectId",
    "redirect_uri": "redirectUri",
  });
});

/** @internal */
export type InitiateOauth2SigninRequest$Outbound = {
  CarrierAccountObjectId: string;
  redirect_uri: string;
  state?: string | undefined;
};

/** @internal */
export const InitiateOauth2SigninRequest$outboundSchema: z.ZodType<
  InitiateOauth2SigninRequest$Outbound,
  z.ZodTypeDef,
  InitiateOauth2SigninRequest
> = z.object({
  carrierAccountObjectId: z.string(),
  redirectUri: z.string(),
  state: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    carrierAccountObjectId: "CarrierAccountObjectId",
    redirectUri: "redirect_uri",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace InitiateOauth2SigninRequest$ {
  /** @deprecated use `InitiateOauth2SigninRequest$inboundSchema` instead. */
  export const inboundSchema = InitiateOauth2SigninRequest$inboundSchema;
  /** @deprecated use `InitiateOauth2SigninRequest$outboundSchema` instead. */
  export const outboundSchema = InitiateOauth2SigninRequest$outboundSchema;
  /** @deprecated use `InitiateOauth2SigninRequest$Outbound` instead. */
  export type Outbound = InitiateOauth2SigninRequest$Outbound;
}

/** @internal */
export const InitiateOauth2SigninResponse$inboundSchema: z.ZodType<
  InitiateOauth2SigninResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  Headers: z.record(z.array(z.string())),
}).transform((v) => {
  return remap$(v, {
    "Headers": "headers",
  });
});

/** @internal */
export type InitiateOauth2SigninResponse$Outbound = {
  Headers: { [k: string]: Array<string> };
};

/** @internal */
export const InitiateOauth2SigninResponse$outboundSchema: z.ZodType<
  InitiateOauth2SigninResponse$Outbound,
  z.ZodTypeDef,
  InitiateOauth2SigninResponse
> = z.object({
  headers: z.record(z.array(z.string())),
}).transform((v) => {
  return remap$(v, {
    headers: "Headers",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace InitiateOauth2SigninResponse$ {
  /** @deprecated use `InitiateOauth2SigninResponse$inboundSchema` instead. */
  export const inboundSchema = InitiateOauth2SigninResponse$inboundSchema;
  /** @deprecated use `InitiateOauth2SigninResponse$outboundSchema` instead. */
  export const outboundSchema = InitiateOauth2SigninResponse$outboundSchema;
  /** @deprecated use `InitiateOauth2SigninResponse$Outbound` instead. */
  export type Outbound = InitiateOauth2SigninResponse$Outbound;
}
