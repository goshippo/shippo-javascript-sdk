/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type CreateCustomsItemRequest = {
    /**
     * String used to pick a non-default API version to use
     */
    shippoApiVersion?: string | undefined;
    /**
     * CustomsItem details.
     */
    customsItemBase?: components.CustomsItemBase | undefined;
};

export type CreateCustomsItemResponse = {
    httpMeta: components.HTTPMetadata;
    customsItem?: components.CustomsItem | undefined;
};

/** @internal */
export namespace CreateCustomsItemRequest$ {
    export type Inbound = {
        "SHIPPO-API-VERSION"?: string | undefined;
        CustomsItemBase?: components.CustomsItemBase$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<CreateCustomsItemRequest, z.ZodTypeDef, Inbound> = z
        .object({
            "SHIPPO-API-VERSION": z.string().optional(),
            CustomsItemBase: components.CustomsItemBase$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                ...(v["SHIPPO-API-VERSION"] === undefined
                    ? null
                    : { shippoApiVersion: v["SHIPPO-API-VERSION"] }),
                ...(v.CustomsItemBase === undefined
                    ? null
                    : { customsItemBase: v.CustomsItemBase }),
            };
        });

    export type Outbound = {
        "SHIPPO-API-VERSION"?: string | undefined;
        CustomsItemBase?: components.CustomsItemBase$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateCustomsItemRequest> = z
        .object({
            shippoApiVersion: z.string().optional(),
            customsItemBase: components.CustomsItemBase$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                ...(v.shippoApiVersion === undefined
                    ? null
                    : { "SHIPPO-API-VERSION": v.shippoApiVersion }),
                ...(v.customsItemBase === undefined
                    ? null
                    : { CustomsItemBase: v.customsItemBase }),
            };
        });
}

/** @internal */
export namespace CreateCustomsItemResponse$ {
    export type Inbound = {
        HttpMeta: components.HTTPMetadata$.Inbound;
        CustomsItem?: components.CustomsItem$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<CreateCustomsItemResponse, z.ZodTypeDef, Inbound> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            CustomsItem: components.CustomsItem$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.CustomsItem === undefined ? null : { customsItem: v.CustomsItem }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        CustomsItem?: components.CustomsItem$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateCustomsItemResponse> = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            customsItem: components.CustomsItem$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
                ...(v.customsItem === undefined ? null : { CustomsItem: v.customsItem }),
            };
        });
}
