/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type CreateRefundRequest = {
    /**
     * String used to pick a non-default API version to use
     */
    shippoApiVersion?: string | undefined;
    /**
     * Refund details
     */
    refundRequestBody?: components.RefundRequestBody | undefined;
};

/** @internal */
export namespace CreateRefundRequest$ {
    export type Inbound = {
        "SHIPPO-API-VERSION"?: string | undefined;
        RefundRequestBody?: components.RefundRequestBody$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<CreateRefundRequest, z.ZodTypeDef, Inbound> = z
        .object({
            "SHIPPO-API-VERSION": z.string().optional(),
            RefundRequestBody: components.RefundRequestBody$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                ...(v["SHIPPO-API-VERSION"] === undefined
                    ? null
                    : { shippoApiVersion: v["SHIPPO-API-VERSION"] }),
                ...(v.RefundRequestBody === undefined
                    ? null
                    : { refundRequestBody: v.RefundRequestBody }),
            };
        });

    export type Outbound = {
        "SHIPPO-API-VERSION"?: string | undefined;
        RefundRequestBody?: components.RefundRequestBody$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateRefundRequest> = z
        .object({
            shippoApiVersion: z.string().optional(),
            refundRequestBody: components.RefundRequestBody$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                ...(v.shippoApiVersion === undefined
                    ? null
                    : { "SHIPPO-API-VERSION": v.shippoApiVersion }),
                ...(v.refundRequestBody === undefined
                    ? null
                    : { RefundRequestBody: v.refundRequestBody }),
            };
        });
}
