/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type GetTransactionRequest = {
    /**
     * Object ID of the transaction to update
     */
    transactionId: string;
};

/** @internal */
export namespace GetTransactionRequest$ {
    export type Inbound = {
        TransactionId: string;
    };

    export const inboundSchema: z.ZodType<GetTransactionRequest, z.ZodTypeDef, Inbound> = z
        .object({
            TransactionId: z.string(),
        })
        .transform((v) => {
            return {
                transactionId: v.TransactionId,
            };
        });

    export type Outbound = {
        TransactionId: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetTransactionRequest> = z
        .object({
            transactionId: z.string(),
        })
        .transform((v) => {
            return {
                TransactionId: v.transactionId,
            };
        });
}
