/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type ListTransactionsRequest = {
    /**
     * Filter by rate ID
     */
    rate?: string | undefined;
    /**
     * Filter by object status
     */
    objectStatus?: components.TransactionStatusEnum | undefined;
    /**
     * Filter by tracking status
     */
    trackingStatus?: components.TrackingStatusEnum | undefined;
    /**
     * The page number you want to select
     */
    page?: number | undefined;
    /**
     * The number of results to return per page (max 100)
     */
    results?: number | undefined;
    /**
     * String used to pick a non-default API version to use
     */
    shippoApiVersion?: string | undefined;
};

export type ListTransactionsResponse = {
    httpMeta: components.HTTPMetadata;
    transactionPaginatedList?: components.TransactionPaginatedList | undefined;
};

/** @internal */
export namespace ListTransactionsRequest$ {
    export type Inbound = {
        rate?: string | undefined;
        object_status?: components.TransactionStatusEnum | undefined;
        tracking_status?: components.TrackingStatusEnum | undefined;
        page?: number | undefined;
        results?: number | undefined;
        "SHIPPO-API-VERSION"?: string | undefined;
    };

    export const inboundSchema: z.ZodType<ListTransactionsRequest, z.ZodTypeDef, Inbound> = z
        .object({
            rate: z.string().optional(),
            object_status: components.TransactionStatusEnum$.optional(),
            tracking_status: components.TrackingStatusEnum$.optional(),
            page: z.number().int().default(1),
            results: z.number().int().default(25),
            "SHIPPO-API-VERSION": z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.rate === undefined ? null : { rate: v.rate }),
                ...(v.object_status === undefined ? null : { objectStatus: v.object_status }),
                ...(v.tracking_status === undefined ? null : { trackingStatus: v.tracking_status }),
                page: v.page,
                results: v.results,
                ...(v["SHIPPO-API-VERSION"] === undefined
                    ? null
                    : { shippoApiVersion: v["SHIPPO-API-VERSION"] }),
            };
        });

    export type Outbound = {
        rate?: string | undefined;
        object_status?: components.TransactionStatusEnum | undefined;
        tracking_status?: components.TrackingStatusEnum | undefined;
        page: number;
        results: number;
        "SHIPPO-API-VERSION"?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ListTransactionsRequest> = z
        .object({
            rate: z.string().optional(),
            objectStatus: components.TransactionStatusEnum$.optional(),
            trackingStatus: components.TrackingStatusEnum$.optional(),
            page: z.number().int().default(1),
            results: z.number().int().default(25),
            shippoApiVersion: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.rate === undefined ? null : { rate: v.rate }),
                ...(v.objectStatus === undefined ? null : { object_status: v.objectStatus }),
                ...(v.trackingStatus === undefined ? null : { tracking_status: v.trackingStatus }),
                page: v.page,
                results: v.results,
                ...(v.shippoApiVersion === undefined
                    ? null
                    : { "SHIPPO-API-VERSION": v.shippoApiVersion }),
            };
        });
}

/** @internal */
export namespace ListTransactionsResponse$ {
    export type Inbound = {
        HttpMeta: components.HTTPMetadata$.Inbound;
        TransactionPaginatedList?: components.TransactionPaginatedList$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<ListTransactionsResponse, z.ZodTypeDef, Inbound> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            TransactionPaginatedList: components.TransactionPaginatedList$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.TransactionPaginatedList === undefined
                    ? null
                    : { transactionPaginatedList: v.TransactionPaginatedList }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        TransactionPaginatedList?: components.TransactionPaginatedList$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ListTransactionsResponse> = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            transactionPaginatedList:
                components.TransactionPaginatedList$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
                ...(v.transactionPaginatedList === undefined
                    ? null
                    : { TransactionPaginatedList: v.transactionPaginatedList }),
            };
        });
}
