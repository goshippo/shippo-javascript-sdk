/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type RemoveShipmentsFromBatchGlobals = {
  /**
   * Optional string used to pick a non-default API version to use. See our <a href="https://docs.goshippo.com/docs/api_concepts/apiversioning/">API version</a> guide.
   */
  shippoApiVersion?: string | undefined;
};

export type RemoveShipmentsFromBatchRequest = {
  /**
   * Object ID of the batch
   */
  batchId: string;
  /**
   * Array of shipments object ids to remove from the batch
   */
  requestBody: Array<string>;
};

/** @internal */
export const RemoveShipmentsFromBatchGlobals$inboundSchema: z.ZodType<
  RemoveShipmentsFromBatchGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  "SHIPPO-API-VERSION": z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "SHIPPO-API-VERSION": "shippoApiVersion",
  });
});

/** @internal */
export type RemoveShipmentsFromBatchGlobals$Outbound = {
  "SHIPPO-API-VERSION"?: string | undefined;
};

/** @internal */
export const RemoveShipmentsFromBatchGlobals$outboundSchema: z.ZodType<
  RemoveShipmentsFromBatchGlobals$Outbound,
  z.ZodTypeDef,
  RemoveShipmentsFromBatchGlobals
> = z.object({
  shippoApiVersion: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    shippoApiVersion: "SHIPPO-API-VERSION",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveShipmentsFromBatchGlobals$ {
  /** @deprecated use `RemoveShipmentsFromBatchGlobals$inboundSchema` instead. */
  export const inboundSchema = RemoveShipmentsFromBatchGlobals$inboundSchema;
  /** @deprecated use `RemoveShipmentsFromBatchGlobals$outboundSchema` instead. */
  export const outboundSchema = RemoveShipmentsFromBatchGlobals$outboundSchema;
  /** @deprecated use `RemoveShipmentsFromBatchGlobals$Outbound` instead. */
  export type Outbound = RemoveShipmentsFromBatchGlobals$Outbound;
}

/** @internal */
export const RemoveShipmentsFromBatchRequest$inboundSchema: z.ZodType<
  RemoveShipmentsFromBatchRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  BatchId: z.string(),
  RequestBody: z.array(z.string()),
}).transform((v) => {
  return remap$(v, {
    "BatchId": "batchId",
    "RequestBody": "requestBody",
  });
});

/** @internal */
export type RemoveShipmentsFromBatchRequest$Outbound = {
  BatchId: string;
  RequestBody: Array<string>;
};

/** @internal */
export const RemoveShipmentsFromBatchRequest$outboundSchema: z.ZodType<
  RemoveShipmentsFromBatchRequest$Outbound,
  z.ZodTypeDef,
  RemoveShipmentsFromBatchRequest
> = z.object({
  batchId: z.string(),
  requestBody: z.array(z.string()),
}).transform((v) => {
  return remap$(v, {
    batchId: "BatchId",
    requestBody: "RequestBody",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveShipmentsFromBatchRequest$ {
  /** @deprecated use `RemoveShipmentsFromBatchRequest$inboundSchema` instead. */
  export const inboundSchema = RemoveShipmentsFromBatchRequest$inboundSchema;
  /** @deprecated use `RemoveShipmentsFromBatchRequest$outboundSchema` instead. */
  export const outboundSchema = RemoveShipmentsFromBatchRequest$outboundSchema;
  /** @deprecated use `RemoveShipmentsFromBatchRequest$Outbound` instead. */
  export type Outbound = RemoveShipmentsFromBatchRequest$Outbound;
}
