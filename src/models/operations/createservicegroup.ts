/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CreateServiceGroupGlobals = {
  /**
   * Optional string used to pick a non-default API version to use. See our <a href="https://docs.goshippo.com/docs/api_concepts/apiversioning/">API version</a> guide.
   */
  shippoApiVersion?: string | undefined;
};

/** @internal */
export const CreateServiceGroupGlobals$inboundSchema: z.ZodType<
  CreateServiceGroupGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  "SHIPPO-API-VERSION": z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "SHIPPO-API-VERSION": "shippoApiVersion",
  });
});

/** @internal */
export type CreateServiceGroupGlobals$Outbound = {
  "SHIPPO-API-VERSION"?: string | undefined;
};

/** @internal */
export const CreateServiceGroupGlobals$outboundSchema: z.ZodType<
  CreateServiceGroupGlobals$Outbound,
  z.ZodTypeDef,
  CreateServiceGroupGlobals
> = z.object({
  shippoApiVersion: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    shippoApiVersion: "SHIPPO-API-VERSION",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateServiceGroupGlobals$ {
  /** @deprecated use `CreateServiceGroupGlobals$inboundSchema` instead. */
  export const inboundSchema = CreateServiceGroupGlobals$inboundSchema;
  /** @deprecated use `CreateServiceGroupGlobals$outboundSchema` instead. */
  export const outboundSchema = CreateServiceGroupGlobals$outboundSchema;
  /** @deprecated use `CreateServiceGroupGlobals$Outbound` instead. */
  export type Outbound = CreateServiceGroupGlobals$Outbound;
}

export function createServiceGroupGlobalsToJSON(
  createServiceGroupGlobals: CreateServiceGroupGlobals,
): string {
  return JSON.stringify(
    CreateServiceGroupGlobals$outboundSchema.parse(createServiceGroupGlobals),
  );
}

export function createServiceGroupGlobalsFromJSON(
  jsonString: string,
): SafeParseResult<CreateServiceGroupGlobals, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateServiceGroupGlobals$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateServiceGroupGlobals' from JSON`,
  );
}
