/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type CreateBatchRequest = {
    /**
     * String used to pick a non-default API version to use
     */
    shippoApiVersion?: string | undefined;
    /**
     * Batch details.
     */
    batchCreateRequest?: components.BatchCreateRequest | undefined;
};

export type CreateBatchResponse = {
    httpMeta: components.HTTPMetadata;
    batch?: components.Batch | undefined;
};

/** @internal */
export namespace CreateBatchRequest$ {
    export type Inbound = {
        "SHIPPO-API-VERSION"?: string | undefined;
        BatchCreateRequest?: components.BatchCreateRequest$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<CreateBatchRequest, z.ZodTypeDef, Inbound> = z
        .object({
            "SHIPPO-API-VERSION": z.string().optional(),
            BatchCreateRequest: components.BatchCreateRequest$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                ...(v["SHIPPO-API-VERSION"] === undefined
                    ? null
                    : { shippoApiVersion: v["SHIPPO-API-VERSION"] }),
                ...(v.BatchCreateRequest === undefined
                    ? null
                    : { batchCreateRequest: v.BatchCreateRequest }),
            };
        });

    export type Outbound = {
        "SHIPPO-API-VERSION"?: string | undefined;
        BatchCreateRequest?: components.BatchCreateRequest$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateBatchRequest> = z
        .object({
            shippoApiVersion: z.string().optional(),
            batchCreateRequest: components.BatchCreateRequest$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                ...(v.shippoApiVersion === undefined
                    ? null
                    : { "SHIPPO-API-VERSION": v.shippoApiVersion }),
                ...(v.batchCreateRequest === undefined
                    ? null
                    : { BatchCreateRequest: v.batchCreateRequest }),
            };
        });
}

/** @internal */
export namespace CreateBatchResponse$ {
    export type Inbound = {
        HttpMeta: components.HTTPMetadata$.Inbound;
        Batch?: components.Batch$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<CreateBatchResponse, z.ZodTypeDef, Inbound> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            Batch: components.Batch$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.Batch === undefined ? null : { batch: v.Batch }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        Batch?: components.Batch$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateBatchResponse> = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            batch: components.Batch$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
                ...(v.batch === undefined ? null : { Batch: v.batch }),
            };
        });
}
