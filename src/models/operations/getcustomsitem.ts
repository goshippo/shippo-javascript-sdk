/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type GetCustomsItemRequest = {
    /**
     * Object ID of the customs item
     */
    customsItemId: string;
    /**
     * The page number you want to select
     */
    page?: number | undefined;
    /**
     * String used to pick a non-default API version to use
     */
    shippoApiVersion?: string | undefined;
};

export type GetCustomsItemResponse = {
    httpMeta: components.HTTPMetadata;
    customsItem?: components.CustomsItem | undefined;
};

/** @internal */
export namespace GetCustomsItemRequest$ {
    export type Inbound = {
        CustomsItemId: string;
        page?: number | undefined;
        "SHIPPO-API-VERSION"?: string | undefined;
    };

    export const inboundSchema: z.ZodType<GetCustomsItemRequest, z.ZodTypeDef, Inbound> = z
        .object({
            CustomsItemId: z.string(),
            page: z.number().int().default(1),
            "SHIPPO-API-VERSION": z.string().optional(),
        })
        .transform((v) => {
            return {
                customsItemId: v.CustomsItemId,
                page: v.page,
                ...(v["SHIPPO-API-VERSION"] === undefined
                    ? null
                    : { shippoApiVersion: v["SHIPPO-API-VERSION"] }),
            };
        });

    export type Outbound = {
        CustomsItemId: string;
        page: number;
        "SHIPPO-API-VERSION"?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetCustomsItemRequest> = z
        .object({
            customsItemId: z.string(),
            page: z.number().int().default(1),
            shippoApiVersion: z.string().optional(),
        })
        .transform((v) => {
            return {
                CustomsItemId: v.customsItemId,
                page: v.page,
                ...(v.shippoApiVersion === undefined
                    ? null
                    : { "SHIPPO-API-VERSION": v.shippoApiVersion }),
            };
        });
}

/** @internal */
export namespace GetCustomsItemResponse$ {
    export type Inbound = {
        HttpMeta: components.HTTPMetadata$.Inbound;
        CustomsItem?: components.CustomsItem$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<GetCustomsItemResponse, z.ZodTypeDef, Inbound> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            CustomsItem: components.CustomsItem$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.CustomsItem === undefined ? null : { customsItem: v.CustomsItem }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        CustomsItem?: components.CustomsItem$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetCustomsItemResponse> = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            customsItem: components.CustomsItem$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
                ...(v.customsItem === undefined ? null : { CustomsItem: v.customsItem }),
            };
        });
}
