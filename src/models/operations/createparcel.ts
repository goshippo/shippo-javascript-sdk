/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type CreateParcelRequest = {
    /**
     * String used to pick a non-default API version to use
     */
    shippoApiVersion?: string | undefined;
    /**
     * Parcel details.
     */
    parcelRequest?: components.ParcelRequest | undefined;
};

/** @internal */
export namespace CreateParcelRequest$ {
    export type Inbound = {
        "SHIPPO-API-VERSION"?: string | undefined;
        ParcelRequest?: components.ParcelRequest$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<CreateParcelRequest, z.ZodTypeDef, Inbound> = z
        .object({
            "SHIPPO-API-VERSION": z.string().optional(),
            ParcelRequest: components.ParcelRequest$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                ...(v["SHIPPO-API-VERSION"] === undefined
                    ? null
                    : { shippoApiVersion: v["SHIPPO-API-VERSION"] }),
                ...(v.ParcelRequest === undefined ? null : { parcelRequest: v.ParcelRequest }),
            };
        });

    export type Outbound = {
        "SHIPPO-API-VERSION"?: string | undefined;
        ParcelRequest?: components.ParcelRequest$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateParcelRequest> = z
        .object({
            shippoApiVersion: z.string().optional(),
            parcelRequest: components.ParcelRequest$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                ...(v.shippoApiVersion === undefined
                    ? null
                    : { "SHIPPO-API-VERSION": v.shippoApiVersion }),
                ...(v.parcelRequest === undefined ? null : { ParcelRequest: v.parcelRequest }),
            };
        });
}
