/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type CreateParcelGlobals = {
  /**
   * Optional string used to pick a non-default API version to use. See our <a href="https://docs.goshippo.com/docs/api_concepts/apiversioning/">API version</a> guide.
   */
  shippoApiVersion?: string | undefined;
};

/**
 * Parcel details.
 */
export type CreateParcelRequestBody =
  | components.ParcelCreateFromTemplateRequest
  | components.ParcelCreateRequest;

/** @internal */
export const CreateParcelGlobals$inboundSchema: z.ZodType<
  CreateParcelGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  "SHIPPO-API-VERSION": z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "SHIPPO-API-VERSION": "shippoApiVersion",
  });
});

/** @internal */
export type CreateParcelGlobals$Outbound = {
  "SHIPPO-API-VERSION"?: string | undefined;
};

/** @internal */
export const CreateParcelGlobals$outboundSchema: z.ZodType<
  CreateParcelGlobals$Outbound,
  z.ZodTypeDef,
  CreateParcelGlobals
> = z.object({
  shippoApiVersion: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    shippoApiVersion: "SHIPPO-API-VERSION",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateParcelGlobals$ {
  /** @deprecated use `CreateParcelGlobals$inboundSchema` instead. */
  export const inboundSchema = CreateParcelGlobals$inboundSchema;
  /** @deprecated use `CreateParcelGlobals$outboundSchema` instead. */
  export const outboundSchema = CreateParcelGlobals$outboundSchema;
  /** @deprecated use `CreateParcelGlobals$Outbound` instead. */
  export type Outbound = CreateParcelGlobals$Outbound;
}

/** @internal */
export const CreateParcelRequestBody$inboundSchema: z.ZodType<
  CreateParcelRequestBody,
  z.ZodTypeDef,
  unknown
> = z.union([
  components.ParcelCreateFromTemplateRequest$inboundSchema,
  components.ParcelCreateRequest$inboundSchema,
]);

/** @internal */
export type CreateParcelRequestBody$Outbound =
  | components.ParcelCreateFromTemplateRequest$Outbound
  | components.ParcelCreateRequest$Outbound;

/** @internal */
export const CreateParcelRequestBody$outboundSchema: z.ZodType<
  CreateParcelRequestBody$Outbound,
  z.ZodTypeDef,
  CreateParcelRequestBody
> = z.union([
  components.ParcelCreateFromTemplateRequest$outboundSchema,
  components.ParcelCreateRequest$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateParcelRequestBody$ {
  /** @deprecated use `CreateParcelRequestBody$inboundSchema` instead. */
  export const inboundSchema = CreateParcelRequestBody$inboundSchema;
  /** @deprecated use `CreateParcelRequestBody$outboundSchema` instead. */
  export const outboundSchema = CreateParcelRequestBody$outboundSchema;
  /** @deprecated use `CreateParcelRequestBody$Outbound` instead. */
  export type Outbound = CreateParcelRequestBody$Outbound;
}
