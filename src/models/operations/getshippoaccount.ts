/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type GetShippoAccountGlobals = {
  /**
   * Optional string used to pick a non-default API version to use. See our <a href="https://docs.goshippo.com/docs/api_concepts/apiversioning/">API version</a> guide.
   */
  shippoApiVersion?: string | undefined;
};

export type GetShippoAccountRequest = {
  /**
   * Object ID of the ShippoAccount
   */
  shippoAccountId: string;
};

/** @internal */
export const GetShippoAccountGlobals$inboundSchema: z.ZodType<
  GetShippoAccountGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  "SHIPPO-API-VERSION": z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "SHIPPO-API-VERSION": "shippoApiVersion",
  });
});

/** @internal */
export type GetShippoAccountGlobals$Outbound = {
  "SHIPPO-API-VERSION"?: string | undefined;
};

/** @internal */
export const GetShippoAccountGlobals$outboundSchema: z.ZodType<
  GetShippoAccountGlobals$Outbound,
  z.ZodTypeDef,
  GetShippoAccountGlobals
> = z.object({
  shippoApiVersion: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    shippoApiVersion: "SHIPPO-API-VERSION",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetShippoAccountGlobals$ {
  /** @deprecated use `GetShippoAccountGlobals$inboundSchema` instead. */
  export const inboundSchema = GetShippoAccountGlobals$inboundSchema;
  /** @deprecated use `GetShippoAccountGlobals$outboundSchema` instead. */
  export const outboundSchema = GetShippoAccountGlobals$outboundSchema;
  /** @deprecated use `GetShippoAccountGlobals$Outbound` instead. */
  export type Outbound = GetShippoAccountGlobals$Outbound;
}

/** @internal */
export const GetShippoAccountRequest$inboundSchema: z.ZodType<
  GetShippoAccountRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  ShippoAccountId: z.string(),
}).transform((v) => {
  return remap$(v, {
    "ShippoAccountId": "shippoAccountId",
  });
});

/** @internal */
export type GetShippoAccountRequest$Outbound = {
  ShippoAccountId: string;
};

/** @internal */
export const GetShippoAccountRequest$outboundSchema: z.ZodType<
  GetShippoAccountRequest$Outbound,
  z.ZodTypeDef,
  GetShippoAccountRequest
> = z.object({
  shippoAccountId: z.string(),
}).transform((v) => {
  return remap$(v, {
    shippoAccountId: "ShippoAccountId",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetShippoAccountRequest$ {
  /** @deprecated use `GetShippoAccountRequest$inboundSchema` instead. */
  export const inboundSchema = GetShippoAccountRequest$inboundSchema;
  /** @deprecated use `GetShippoAccountRequest$outboundSchema` instead. */
  export const outboundSchema = GetShippoAccountRequest$outboundSchema;
  /** @deprecated use `GetShippoAccountRequest$Outbound` instead. */
  export type Outbound = GetShippoAccountRequest$Outbound;
}
