/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type GetShippoAccountGlobals = {
    /**
     * String used to pick a non-default API version to use
     */
    shippoApiVersion?: string | undefined;
};

export type GetShippoAccountRequest = {
    /**
     * Object ID of the ShippoAccount
     */
    shippoAccountId: string;
};

/** @internal */
export namespace GetShippoAccountGlobals$ {
    export const inboundSchema: z.ZodType<GetShippoAccountGlobals, z.ZodTypeDef, unknown> = z
        .object({
            "SHIPPO-API-VERSION": z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v["SHIPPO-API-VERSION"] === undefined
                    ? null
                    : { shippoApiVersion: v["SHIPPO-API-VERSION"] }),
            };
        });

    export type Outbound = {
        "SHIPPO-API-VERSION"?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetShippoAccountGlobals> = z
        .object({
            shippoApiVersion: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.shippoApiVersion === undefined
                    ? null
                    : { "SHIPPO-API-VERSION": v.shippoApiVersion }),
            };
        });
}

/** @internal */
export namespace GetShippoAccountRequest$ {
    export const inboundSchema: z.ZodType<GetShippoAccountRequest, z.ZodTypeDef, unknown> = z
        .object({
            ShippoAccountId: z.string(),
        })
        .transform((v) => {
            return {
                shippoAccountId: v.ShippoAccountId,
            };
        });

    export type Outbound = {
        ShippoAccountId: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetShippoAccountRequest> = z
        .object({
            shippoAccountId: z.string(),
        })
        .transform((v) => {
            return {
                ShippoAccountId: v.shippoAccountId,
            };
        });
}
