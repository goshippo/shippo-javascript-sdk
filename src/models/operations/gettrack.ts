/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type GetTrackRequest = {
    /**
     * Tracking number
     */
    trackingNumber: string;
    /**
     * Name of the carrier
     */
    carrier: string;
    /**
     * String used to pick a non-default API version to use
     */
    shippoApiVersion?: string | undefined;
};

export type GetTrackResponse = {
    httpMeta: components.HTTPMetadata;
    track?: components.Track | undefined;
};

/** @internal */
export namespace GetTrackRequest$ {
    export type Inbound = {
        TrackingNumber: string;
        Carrier: string;
        "SHIPPO-API-VERSION"?: string | undefined;
    };

    export const inboundSchema: z.ZodType<GetTrackRequest, z.ZodTypeDef, Inbound> = z
        .object({
            TrackingNumber: z.string(),
            Carrier: z.string(),
            "SHIPPO-API-VERSION": z.string().optional(),
        })
        .transform((v) => {
            return {
                trackingNumber: v.TrackingNumber,
                carrier: v.Carrier,
                ...(v["SHIPPO-API-VERSION"] === undefined
                    ? null
                    : { shippoApiVersion: v["SHIPPO-API-VERSION"] }),
            };
        });

    export type Outbound = {
        TrackingNumber: string;
        Carrier: string;
        "SHIPPO-API-VERSION"?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetTrackRequest> = z
        .object({
            trackingNumber: z.string(),
            carrier: z.string(),
            shippoApiVersion: z.string().optional(),
        })
        .transform((v) => {
            return {
                TrackingNumber: v.trackingNumber,
                Carrier: v.carrier,
                ...(v.shippoApiVersion === undefined
                    ? null
                    : { "SHIPPO-API-VERSION": v.shippoApiVersion }),
            };
        });
}

/** @internal */
export namespace GetTrackResponse$ {
    export type Inbound = {
        HttpMeta: components.HTTPMetadata$.Inbound;
        Track?: components.Track$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<GetTrackResponse, z.ZodTypeDef, Inbound> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            Track: components.Track$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.Track === undefined ? null : { track: v.Track }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        Track?: components.Track$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetTrackResponse> = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            track: components.Track$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
                ...(v.track === undefined ? null : { Track: v.track }),
            };
        });
}
