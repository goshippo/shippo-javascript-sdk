/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type GetCustomsDeclarationRequest = {
    /**
     * Object ID of the customs declaration
     */
    customsDeclarationId: string;
    /**
     * The page number you want to select
     */
    page?: number | undefined;
    /**
     * String used to pick a non-default API version to use
     */
    shippoApiVersion?: string | undefined;
};

export type GetCustomsDeclarationResponse = {
    httpMeta: components.HTTPMetadata;
    customsDeclaration?: components.CustomsDeclaration | undefined;
};

/** @internal */
export namespace GetCustomsDeclarationRequest$ {
    export type Inbound = {
        CustomsDeclarationId: string;
        page?: number | undefined;
        "SHIPPO-API-VERSION"?: string | undefined;
    };

    export const inboundSchema: z.ZodType<GetCustomsDeclarationRequest, z.ZodTypeDef, Inbound> = z
        .object({
            CustomsDeclarationId: z.string(),
            page: z.number().int().default(1),
            "SHIPPO-API-VERSION": z.string().optional(),
        })
        .transform((v) => {
            return {
                customsDeclarationId: v.CustomsDeclarationId,
                page: v.page,
                ...(v["SHIPPO-API-VERSION"] === undefined
                    ? null
                    : { shippoApiVersion: v["SHIPPO-API-VERSION"] }),
            };
        });

    export type Outbound = {
        CustomsDeclarationId: string;
        page: number;
        "SHIPPO-API-VERSION"?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetCustomsDeclarationRequest> = z
        .object({
            customsDeclarationId: z.string(),
            page: z.number().int().default(1),
            shippoApiVersion: z.string().optional(),
        })
        .transform((v) => {
            return {
                CustomsDeclarationId: v.customsDeclarationId,
                page: v.page,
                ...(v.shippoApiVersion === undefined
                    ? null
                    : { "SHIPPO-API-VERSION": v.shippoApiVersion }),
            };
        });
}

/** @internal */
export namespace GetCustomsDeclarationResponse$ {
    export type Inbound = {
        HttpMeta: components.HTTPMetadata$.Inbound;
        CustomsDeclaration?: components.CustomsDeclaration$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<GetCustomsDeclarationResponse, z.ZodTypeDef, Inbound> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            CustomsDeclaration: components.CustomsDeclaration$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.CustomsDeclaration === undefined
                    ? null
                    : { customsDeclaration: v.CustomsDeclaration }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        CustomsDeclaration?: components.CustomsDeclaration$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetCustomsDeclarationResponse> =
        z
            .object({
                httpMeta: components.HTTPMetadata$.outboundSchema,
                customsDeclaration: components.CustomsDeclaration$.outboundSchema.optional(),
            })
            .transform((v) => {
                return {
                    HttpMeta: v.httpMeta,
                    ...(v.customsDeclaration === undefined
                        ? null
                        : { CustomsDeclaration: v.customsDeclaration }),
                };
            });
}
