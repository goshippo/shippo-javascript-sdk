/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type GetCustomsDeclarationRequest = {
    /**
     * Object ID of the customs declaration
     */
    customsDeclarationId: string;
    /**
     * The page number you want to select
     */
    page?: number | undefined;
};

/** @internal */
export namespace GetCustomsDeclarationRequest$ {
    export type Inbound = {
        CustomsDeclarationId: string;
        page?: number | undefined;
    };

    export const inboundSchema: z.ZodType<GetCustomsDeclarationRequest, z.ZodTypeDef, Inbound> = z
        .object({
            CustomsDeclarationId: z.string(),
            page: z.number().int().default(1),
        })
        .transform((v) => {
            return {
                customsDeclarationId: v.CustomsDeclarationId,
                page: v.page,
            };
        });

    export type Outbound = {
        CustomsDeclarationId: string;
        page: number;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetCustomsDeclarationRequest> = z
        .object({
            customsDeclarationId: z.string(),
            page: z.number().int().default(1),
        })
        .transform((v) => {
            return {
                CustomsDeclarationId: v.customsDeclarationId,
                page: v.page,
            };
        });
}
