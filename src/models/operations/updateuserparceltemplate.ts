/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type UpdateUserParcelTemplateGlobals = {
  /**
   * Optional string used to pick a non-default API version to use. See our <a href="https://docs.goshippo.com/docs/api_concepts/apiversioning/">API version</a> guide.
   */
  shippoApiVersion?: string | undefined;
};

export type UpdateUserParcelTemplateRequest = {
  /**
   * Object ID of the user parcel template
   */
  userParcelTemplateObjectId: string;
  userParcelTemplateUpdateRequest?:
    | components.UserParcelTemplateUpdateRequest
    | undefined;
};

/** @internal */
export const UpdateUserParcelTemplateGlobals$inboundSchema: z.ZodType<
  UpdateUserParcelTemplateGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  "SHIPPO-API-VERSION": z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "SHIPPO-API-VERSION": "shippoApiVersion",
  });
});

/** @internal */
export type UpdateUserParcelTemplateGlobals$Outbound = {
  "SHIPPO-API-VERSION"?: string | undefined;
};

/** @internal */
export const UpdateUserParcelTemplateGlobals$outboundSchema: z.ZodType<
  UpdateUserParcelTemplateGlobals$Outbound,
  z.ZodTypeDef,
  UpdateUserParcelTemplateGlobals
> = z.object({
  shippoApiVersion: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    shippoApiVersion: "SHIPPO-API-VERSION",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateUserParcelTemplateGlobals$ {
  /** @deprecated use `UpdateUserParcelTemplateGlobals$inboundSchema` instead. */
  export const inboundSchema = UpdateUserParcelTemplateGlobals$inboundSchema;
  /** @deprecated use `UpdateUserParcelTemplateGlobals$outboundSchema` instead. */
  export const outboundSchema = UpdateUserParcelTemplateGlobals$outboundSchema;
  /** @deprecated use `UpdateUserParcelTemplateGlobals$Outbound` instead. */
  export type Outbound = UpdateUserParcelTemplateGlobals$Outbound;
}

/** @internal */
export const UpdateUserParcelTemplateRequest$inboundSchema: z.ZodType<
  UpdateUserParcelTemplateRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  UserParcelTemplateObjectId: z.string(),
  UserParcelTemplateUpdateRequest: components
    .UserParcelTemplateUpdateRequest$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "UserParcelTemplateObjectId": "userParcelTemplateObjectId",
    "UserParcelTemplateUpdateRequest": "userParcelTemplateUpdateRequest",
  });
});

/** @internal */
export type UpdateUserParcelTemplateRequest$Outbound = {
  UserParcelTemplateObjectId: string;
  UserParcelTemplateUpdateRequest?:
    | components.UserParcelTemplateUpdateRequest$Outbound
    | undefined;
};

/** @internal */
export const UpdateUserParcelTemplateRequest$outboundSchema: z.ZodType<
  UpdateUserParcelTemplateRequest$Outbound,
  z.ZodTypeDef,
  UpdateUserParcelTemplateRequest
> = z.object({
  userParcelTemplateObjectId: z.string(),
  userParcelTemplateUpdateRequest: components
    .UserParcelTemplateUpdateRequest$outboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    userParcelTemplateObjectId: "UserParcelTemplateObjectId",
    userParcelTemplateUpdateRequest: "UserParcelTemplateUpdateRequest",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateUserParcelTemplateRequest$ {
  /** @deprecated use `UpdateUserParcelTemplateRequest$inboundSchema` instead. */
  export const inboundSchema = UpdateUserParcelTemplateRequest$inboundSchema;
  /** @deprecated use `UpdateUserParcelTemplateRequest$outboundSchema` instead. */
  export const outboundSchema = UpdateUserParcelTemplateRequest$outboundSchema;
  /** @deprecated use `UpdateUserParcelTemplateRequest$Outbound` instead. */
  export type Outbound = UpdateUserParcelTemplateRequest$Outbound;
}
