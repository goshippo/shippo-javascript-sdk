/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type CreateOrderRequest = {
    /**
     * String used to pick a non-default API version to use
     */
    shippoApiVersion?: string | undefined;
    /**
     * Order details.
     */
    orderCreateRequest?: components.OrderCreateRequest | undefined;
};

export type CreateOrderResponse = {
    httpMeta: components.HTTPMetadata;
    order?: components.Order | undefined;
};

/** @internal */
export namespace CreateOrderRequest$ {
    export type Inbound = {
        "SHIPPO-API-VERSION"?: string | undefined;
        OrderCreateRequest?: components.OrderCreateRequest$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<CreateOrderRequest, z.ZodTypeDef, Inbound> = z
        .object({
            "SHIPPO-API-VERSION": z.string().optional(),
            OrderCreateRequest: components.OrderCreateRequest$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                ...(v["SHIPPO-API-VERSION"] === undefined
                    ? null
                    : { shippoApiVersion: v["SHIPPO-API-VERSION"] }),
                ...(v.OrderCreateRequest === undefined
                    ? null
                    : { orderCreateRequest: v.OrderCreateRequest }),
            };
        });

    export type Outbound = {
        "SHIPPO-API-VERSION"?: string | undefined;
        OrderCreateRequest?: components.OrderCreateRequest$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateOrderRequest> = z
        .object({
            shippoApiVersion: z.string().optional(),
            orderCreateRequest: components.OrderCreateRequest$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                ...(v.shippoApiVersion === undefined
                    ? null
                    : { "SHIPPO-API-VERSION": v.shippoApiVersion }),
                ...(v.orderCreateRequest === undefined
                    ? null
                    : { OrderCreateRequest: v.orderCreateRequest }),
            };
        });
}

/** @internal */
export namespace CreateOrderResponse$ {
    export type Inbound = {
        HttpMeta: components.HTTPMetadata$.Inbound;
        Order?: components.Order$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<CreateOrderResponse, z.ZodTypeDef, Inbound> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            Order: components.Order$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.Order === undefined ? null : { order: v.Order }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        Order?: components.Order$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateOrderResponse> = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            order: components.Order$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
                ...(v.order === undefined ? null : { Order: v.order }),
            };
        });
}
