/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type GetUserParcelTemplateRequest = {
    /**
     * Object ID of the user parcel template
     */
    userParcelTemplateObjectId: string;
};

/** @internal */
export namespace GetUserParcelTemplateRequest$ {
    export type Inbound = {
        UserParcelTemplateObjectId: string;
    };

    export const inboundSchema: z.ZodType<GetUserParcelTemplateRequest, z.ZodTypeDef, Inbound> = z
        .object({
            UserParcelTemplateObjectId: z.string(),
        })
        .transform((v) => {
            return {
                userParcelTemplateObjectId: v.UserParcelTemplateObjectId,
            };
        });

    export type Outbound = {
        UserParcelTemplateObjectId: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetUserParcelTemplateRequest> = z
        .object({
            userParcelTemplateObjectId: z.string(),
        })
        .transform((v) => {
            return {
                UserParcelTemplateObjectId: v.userParcelTemplateObjectId,
            };
        });
}
