/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type GetUserParcelTemplateRequest = {
    /**
     * Object ID of the user parcel template
     */
    userParcelTemplateObjectId: string;
    /**
     * String used to pick a non-default API version to use
     */
    shippoApiVersion?: string | undefined;
};

export type GetUserParcelTemplateResponse = {
    httpMeta: components.HTTPMetadata;
    userParcelTemplate?: components.UserParcelTemplate | undefined;
};

/** @internal */
export namespace GetUserParcelTemplateRequest$ {
    export type Inbound = {
        UserParcelTemplateObjectId: string;
        "SHIPPO-API-VERSION"?: string | undefined;
    };

    export const inboundSchema: z.ZodType<GetUserParcelTemplateRequest, z.ZodTypeDef, Inbound> = z
        .object({
            UserParcelTemplateObjectId: z.string(),
            "SHIPPO-API-VERSION": z.string().optional(),
        })
        .transform((v) => {
            return {
                userParcelTemplateObjectId: v.UserParcelTemplateObjectId,
                ...(v["SHIPPO-API-VERSION"] === undefined
                    ? null
                    : { shippoApiVersion: v["SHIPPO-API-VERSION"] }),
            };
        });

    export type Outbound = {
        UserParcelTemplateObjectId: string;
        "SHIPPO-API-VERSION"?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetUserParcelTemplateRequest> = z
        .object({
            userParcelTemplateObjectId: z.string(),
            shippoApiVersion: z.string().optional(),
        })
        .transform((v) => {
            return {
                UserParcelTemplateObjectId: v.userParcelTemplateObjectId,
                ...(v.shippoApiVersion === undefined
                    ? null
                    : { "SHIPPO-API-VERSION": v.shippoApiVersion }),
            };
        });
}

/** @internal */
export namespace GetUserParcelTemplateResponse$ {
    export type Inbound = {
        HttpMeta: components.HTTPMetadata$.Inbound;
        UserParcelTemplate?: components.UserParcelTemplate$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<GetUserParcelTemplateResponse, z.ZodTypeDef, Inbound> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            UserParcelTemplate: components.UserParcelTemplate$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.UserParcelTemplate === undefined
                    ? null
                    : { userParcelTemplate: v.UserParcelTemplate }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        UserParcelTemplate?: components.UserParcelTemplate$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetUserParcelTemplateResponse> =
        z
            .object({
                httpMeta: components.HTTPMetadata$.outboundSchema,
                userParcelTemplate: components.UserParcelTemplate$.outboundSchema.optional(),
            })
            .transform((v) => {
                return {
                    HttpMeta: v.httpMeta,
                    ...(v.userParcelTemplate === undefined
                        ? null
                        : { UserParcelTemplate: v.userParcelTemplate }),
                };
            });
}
