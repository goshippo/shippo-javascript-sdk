/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type AddShipmentsToBatchRequest = {
    /**
     * Object ID of the batch
     */
    batchId: string;
    /**
     * Array of shipments to add to the batch
     */
    requestBody: Array<components.BatchShipmentBase>;
};

/** @internal */
export namespace AddShipmentsToBatchRequest$ {
    export const inboundSchema: z.ZodType<AddShipmentsToBatchRequest, z.ZodTypeDef, unknown> = z
        .object({
            BatchId: z.string(),
            RequestBody: z.array(components.BatchShipmentBase$.inboundSchema),
        })
        .transform((v) => {
            return {
                batchId: v.BatchId,
                requestBody: v.RequestBody,
            };
        });

    export type Outbound = {
        BatchId: string;
        RequestBody: Array<components.BatchShipmentBase$.Outbound>;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AddShipmentsToBatchRequest> = z
        .object({
            batchId: z.string(),
            requestBody: z.array(components.BatchShipmentBase$.outboundSchema),
        })
        .transform((v) => {
            return {
                BatchId: v.batchId,
                RequestBody: v.requestBody,
            };
        });
}
