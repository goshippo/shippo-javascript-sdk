/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type AddShipmentsToBatchGlobals = {
    /**
     * String used to pick a non-default API version to use
     */
    shippoApiVersion?: string | undefined;
};

export type AddShipmentsToBatchRequest = {
    /**
     * Object ID of the batch
     */
    batchId: string;
    /**
     * Array of shipments to add to the batch
     */
    requestBody: Array<components.BatchShipmentCreateRequest>;
};

/** @internal */
export namespace AddShipmentsToBatchGlobals$ {
    export const inboundSchema: z.ZodType<AddShipmentsToBatchGlobals, z.ZodTypeDef, unknown> = z
        .object({
            "SHIPPO-API-VERSION": z.string().optional(),
        })
        .transform((v) => {
            return remap$(v, {
                "SHIPPO-API-VERSION": "shippoApiVersion",
            });
        });

    export type Outbound = {
        "SHIPPO-API-VERSION"?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AddShipmentsToBatchGlobals> = z
        .object({
            shippoApiVersion: z.string().optional(),
        })
        .transform((v) => {
            return remap$(v, {
                shippoApiVersion: "SHIPPO-API-VERSION",
            });
        });
}

/** @internal */
export namespace AddShipmentsToBatchRequest$ {
    export const inboundSchema: z.ZodType<AddShipmentsToBatchRequest, z.ZodTypeDef, unknown> = z
        .object({
            BatchId: z.string(),
            RequestBody: z.array(components.BatchShipmentCreateRequest$.inboundSchema),
        })
        .transform((v) => {
            return remap$(v, {
                BatchId: "batchId",
                RequestBody: "requestBody",
            });
        });

    export type Outbound = {
        BatchId: string;
        RequestBody: Array<components.BatchShipmentCreateRequest$.Outbound>;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AddShipmentsToBatchRequest> = z
        .object({
            batchId: z.string(),
            requestBody: z.array(components.BatchShipmentCreateRequest$.outboundSchema),
        })
        .transform((v) => {
            return remap$(v, {
                batchId: "BatchId",
                requestBody: "RequestBody",
            });
        });
}
