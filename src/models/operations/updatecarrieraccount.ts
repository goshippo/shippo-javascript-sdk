/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type UpdateCarrierAccountGlobals = {
  /**
   * Optional string used to pick a non-default API version to use. See our <a href="https://docs.goshippo.com/docs/api_concepts/apiversioning/">API version</a> guide.
   */
  shippoApiVersion?: string | undefined;
};

export type UpdateCarrierAccountRequest = {
  /**
   * Object ID of the carrier account
   */
  carrierAccountId: string;
  /**
   * Examples.
   */
  carrierAccountBase?: components.CarrierAccountBase | undefined;
};

/** @internal */
export const UpdateCarrierAccountGlobals$inboundSchema: z.ZodType<
  UpdateCarrierAccountGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  "SHIPPO-API-VERSION": z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "SHIPPO-API-VERSION": "shippoApiVersion",
  });
});

/** @internal */
export type UpdateCarrierAccountGlobals$Outbound = {
  "SHIPPO-API-VERSION"?: string | undefined;
};

/** @internal */
export const UpdateCarrierAccountGlobals$outboundSchema: z.ZodType<
  UpdateCarrierAccountGlobals$Outbound,
  z.ZodTypeDef,
  UpdateCarrierAccountGlobals
> = z.object({
  shippoApiVersion: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    shippoApiVersion: "SHIPPO-API-VERSION",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateCarrierAccountGlobals$ {
  /** @deprecated use `UpdateCarrierAccountGlobals$inboundSchema` instead. */
  export const inboundSchema = UpdateCarrierAccountGlobals$inboundSchema;
  /** @deprecated use `UpdateCarrierAccountGlobals$outboundSchema` instead. */
  export const outboundSchema = UpdateCarrierAccountGlobals$outboundSchema;
  /** @deprecated use `UpdateCarrierAccountGlobals$Outbound` instead. */
  export type Outbound = UpdateCarrierAccountGlobals$Outbound;
}

/** @internal */
export const UpdateCarrierAccountRequest$inboundSchema: z.ZodType<
  UpdateCarrierAccountRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  CarrierAccountId: z.string(),
  CarrierAccountBase: components.CarrierAccountBase$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "CarrierAccountId": "carrierAccountId",
    "CarrierAccountBase": "carrierAccountBase",
  });
});

/** @internal */
export type UpdateCarrierAccountRequest$Outbound = {
  CarrierAccountId: string;
  CarrierAccountBase?: components.CarrierAccountBase$Outbound | undefined;
};

/** @internal */
export const UpdateCarrierAccountRequest$outboundSchema: z.ZodType<
  UpdateCarrierAccountRequest$Outbound,
  z.ZodTypeDef,
  UpdateCarrierAccountRequest
> = z.object({
  carrierAccountId: z.string(),
  carrierAccountBase: components.CarrierAccountBase$outboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    carrierAccountId: "CarrierAccountId",
    carrierAccountBase: "CarrierAccountBase",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateCarrierAccountRequest$ {
  /** @deprecated use `UpdateCarrierAccountRequest$inboundSchema` instead. */
  export const inboundSchema = UpdateCarrierAccountRequest$inboundSchema;
  /** @deprecated use `UpdateCarrierAccountRequest$outboundSchema` instead. */
  export const outboundSchema = UpdateCarrierAccountRequest$outboundSchema;
  /** @deprecated use `UpdateCarrierAccountRequest$Outbound` instead. */
  export type Outbound = UpdateCarrierAccountRequest$Outbound;
}
