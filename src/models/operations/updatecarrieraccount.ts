/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type UpdateCarrierAccountRequest = {
    /**
     * Object ID of the carrier account
     */
    carrierAccountId: string;
    /**
     * Examples.
     */
    carrierAccountBase?: components.CarrierAccountBase | undefined;
};

/** @internal */
export namespace UpdateCarrierAccountRequest$ {
    export const inboundSchema: z.ZodType<UpdateCarrierAccountRequest, z.ZodTypeDef, unknown> = z
        .object({
            CarrierAccountId: z.string(),
            CarrierAccountBase: components.CarrierAccountBase$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                carrierAccountId: v.CarrierAccountId,
                ...(v.CarrierAccountBase === undefined
                    ? null
                    : { carrierAccountBase: v.CarrierAccountBase }),
            };
        });

    export type Outbound = {
        CarrierAccountId: string;
        CarrierAccountBase?: components.CarrierAccountBase$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, UpdateCarrierAccountRequest> = z
        .object({
            carrierAccountId: z.string(),
            carrierAccountBase: components.CarrierAccountBase$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                CarrierAccountId: v.carrierAccountId,
                ...(v.carrierAccountBase === undefined
                    ? null
                    : { CarrierAccountBase: v.carrierAccountBase }),
            };
        });
}
