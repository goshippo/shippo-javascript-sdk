/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type CreateAddressRequest = {
    /**
     * String used to pick a non-default API version to use
     */
    shippoApiVersion?: string | undefined;
    /**
     * Address details.
     */
    addressCreateRequest?: components.AddressCreateRequest | undefined;
};

export type CreateAddressResponse = {
    httpMeta: components.HTTPMetadata;
    address?: components.Address | undefined;
};

/** @internal */
export namespace CreateAddressRequest$ {
    export type Inbound = {
        "SHIPPO-API-VERSION"?: string | undefined;
        AddressCreateRequest?: components.AddressCreateRequest$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<CreateAddressRequest, z.ZodTypeDef, Inbound> = z
        .object({
            "SHIPPO-API-VERSION": z.string().optional(),
            AddressCreateRequest: components.AddressCreateRequest$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                ...(v["SHIPPO-API-VERSION"] === undefined
                    ? null
                    : { shippoApiVersion: v["SHIPPO-API-VERSION"] }),
                ...(v.AddressCreateRequest === undefined
                    ? null
                    : { addressCreateRequest: v.AddressCreateRequest }),
            };
        });

    export type Outbound = {
        "SHIPPO-API-VERSION"?: string | undefined;
        AddressCreateRequest?: components.AddressCreateRequest$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateAddressRequest> = z
        .object({
            shippoApiVersion: z.string().optional(),
            addressCreateRequest: components.AddressCreateRequest$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                ...(v.shippoApiVersion === undefined
                    ? null
                    : { "SHIPPO-API-VERSION": v.shippoApiVersion }),
                ...(v.addressCreateRequest === undefined
                    ? null
                    : { AddressCreateRequest: v.addressCreateRequest }),
            };
        });
}

/** @internal */
export namespace CreateAddressResponse$ {
    export type Inbound = {
        HttpMeta: components.HTTPMetadata$.Inbound;
        Address?: components.Address$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<CreateAddressResponse, z.ZodTypeDef, Inbound> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            Address: components.Address$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.Address === undefined ? null : { address: v.Address }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        Address?: components.Address$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateAddressResponse> = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            address: components.Address$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
                ...(v.address === undefined ? null : { Address: v.address }),
            };
        });
}
