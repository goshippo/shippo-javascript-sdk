/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type UpdateWebhookRequest = {
    /**
     * Object ID of the webhook to retrieve
     */
    webhookId: string;
    webhookUpdateRequest: components.WebhookUpdateRequest;
};

/** @internal */
export namespace UpdateWebhookRequest$ {
    export const inboundSchema: z.ZodType<UpdateWebhookRequest, z.ZodTypeDef, unknown> = z
        .object({
            webhookId: z.string(),
            WebhookUpdateRequest: components.WebhookUpdateRequest$.inboundSchema,
        })
        .transform((v) => {
            return remap$(v, {
                WebhookUpdateRequest: "webhookUpdateRequest",
            });
        });

    export type Outbound = {
        webhookId: string;
        WebhookUpdateRequest: components.WebhookUpdateRequest$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, UpdateWebhookRequest> = z
        .object({
            webhookId: z.string(),
            webhookUpdateRequest: components.WebhookUpdateRequest$.outboundSchema,
        })
        .transform((v) => {
            return remap$(v, {
                webhookUpdateRequest: "WebhookUpdateRequest",
            });
        });
}
