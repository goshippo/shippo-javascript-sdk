/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type UpdateWebhookRequest = {
  /**
   * Object ID of the webhook to retrieve
   */
  webhookId: string;
  webhookUpdateRequest: components.WebhookUpdateRequest;
};

/** @internal */
export const UpdateWebhookRequest$inboundSchema: z.ZodType<
  UpdateWebhookRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  webhookId: z.string(),
  WebhookUpdateRequest: components.WebhookUpdateRequest$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "WebhookUpdateRequest": "webhookUpdateRequest",
  });
});

/** @internal */
export type UpdateWebhookRequest$Outbound = {
  webhookId: string;
  WebhookUpdateRequest: components.WebhookUpdateRequest$Outbound;
};

/** @internal */
export const UpdateWebhookRequest$outboundSchema: z.ZodType<
  UpdateWebhookRequest$Outbound,
  z.ZodTypeDef,
  UpdateWebhookRequest
> = z.object({
  webhookId: z.string(),
  webhookUpdateRequest: components.WebhookUpdateRequest$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    webhookUpdateRequest: "WebhookUpdateRequest",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateWebhookRequest$ {
  /** @deprecated use `UpdateWebhookRequest$inboundSchema` instead. */
  export const inboundSchema = UpdateWebhookRequest$inboundSchema;
  /** @deprecated use `UpdateWebhookRequest$outboundSchema` instead. */
  export const outboundSchema = UpdateWebhookRequest$outboundSchema;
  /** @deprecated use `UpdateWebhookRequest$Outbound` instead. */
  export type Outbound = UpdateWebhookRequest$Outbound;
}
