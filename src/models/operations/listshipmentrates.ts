/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ListShipmentRatesGlobals = {
  /**
   * Optional string used to pick a non-default API version to use. See our <a href="https://docs.goshippo.com/docs/api_concepts/apiversioning/">API version</a> guide.
   */
  shippoApiVersion?: string | undefined;
};

export type ListShipmentRatesRequest = {
  /**
   * Object ID of the shipment to update
   */
  shipmentId: string;
  /**
   * The page number you want to select
   */
  page?: number | undefined;
  /**
   * The number of results to return per page (max 100)
   */
  results?: number | undefined;
};

/** @internal */
export const ListShipmentRatesGlobals$inboundSchema: z.ZodType<
  ListShipmentRatesGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  "SHIPPO-API-VERSION": z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "SHIPPO-API-VERSION": "shippoApiVersion",
  });
});

/** @internal */
export type ListShipmentRatesGlobals$Outbound = {
  "SHIPPO-API-VERSION"?: string | undefined;
};

/** @internal */
export const ListShipmentRatesGlobals$outboundSchema: z.ZodType<
  ListShipmentRatesGlobals$Outbound,
  z.ZodTypeDef,
  ListShipmentRatesGlobals
> = z.object({
  shippoApiVersion: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    shippoApiVersion: "SHIPPO-API-VERSION",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListShipmentRatesGlobals$ {
  /** @deprecated use `ListShipmentRatesGlobals$inboundSchema` instead. */
  export const inboundSchema = ListShipmentRatesGlobals$inboundSchema;
  /** @deprecated use `ListShipmentRatesGlobals$outboundSchema` instead. */
  export const outboundSchema = ListShipmentRatesGlobals$outboundSchema;
  /** @deprecated use `ListShipmentRatesGlobals$Outbound` instead. */
  export type Outbound = ListShipmentRatesGlobals$Outbound;
}

export function listShipmentRatesGlobalsToJSON(
  listShipmentRatesGlobals: ListShipmentRatesGlobals,
): string {
  return JSON.stringify(
    ListShipmentRatesGlobals$outboundSchema.parse(listShipmentRatesGlobals),
  );
}

export function listShipmentRatesGlobalsFromJSON(
  jsonString: string,
): SafeParseResult<ListShipmentRatesGlobals, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ListShipmentRatesGlobals$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListShipmentRatesGlobals' from JSON`,
  );
}

/** @internal */
export const ListShipmentRatesRequest$inboundSchema: z.ZodType<
  ListShipmentRatesRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  ShipmentId: z.string(),
  page: z.number().int().default(1),
  results: z.number().int().default(25),
}).transform((v) => {
  return remap$(v, {
    "ShipmentId": "shipmentId",
  });
});

/** @internal */
export type ListShipmentRatesRequest$Outbound = {
  ShipmentId: string;
  page: number;
  results: number;
};

/** @internal */
export const ListShipmentRatesRequest$outboundSchema: z.ZodType<
  ListShipmentRatesRequest$Outbound,
  z.ZodTypeDef,
  ListShipmentRatesRequest
> = z.object({
  shipmentId: z.string(),
  page: z.number().int().default(1),
  results: z.number().int().default(25),
}).transform((v) => {
  return remap$(v, {
    shipmentId: "ShipmentId",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListShipmentRatesRequest$ {
  /** @deprecated use `ListShipmentRatesRequest$inboundSchema` instead. */
  export const inboundSchema = ListShipmentRatesRequest$inboundSchema;
  /** @deprecated use `ListShipmentRatesRequest$outboundSchema` instead. */
  export const outboundSchema = ListShipmentRatesRequest$outboundSchema;
  /** @deprecated use `ListShipmentRatesRequest$Outbound` instead. */
  export type Outbound = ListShipmentRatesRequest$Outbound;
}

export function listShipmentRatesRequestToJSON(
  listShipmentRatesRequest: ListShipmentRatesRequest,
): string {
  return JSON.stringify(
    ListShipmentRatesRequest$outboundSchema.parse(listShipmentRatesRequest),
  );
}

export function listShipmentRatesRequestFromJSON(
  jsonString: string,
): SafeParseResult<ListShipmentRatesRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ListShipmentRatesRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListShipmentRatesRequest' from JSON`,
  );
}
