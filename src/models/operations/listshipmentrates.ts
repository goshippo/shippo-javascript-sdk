/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type ListShipmentRatesRequest = {
    /**
     * Object ID of the shipment to update
     */
    shipmentId: string;
    /**
     * The page number you want to select
     */
    page?: number | undefined;
    /**
     * The number of results to return per page (max 100)
     */
    results?: number | undefined;
};

/** @internal */
export namespace ListShipmentRatesRequest$ {
    export type Inbound = {
        ShipmentId: string;
        page?: number | undefined;
        results?: number | undefined;
    };

    export const inboundSchema: z.ZodType<ListShipmentRatesRequest, z.ZodTypeDef, Inbound> = z
        .object({
            ShipmentId: z.string(),
            page: z.number().int().default(1),
            results: z.number().int().default(25),
        })
        .transform((v) => {
            return {
                shipmentId: v.ShipmentId,
                page: v.page,
                results: v.results,
            };
        });

    export type Outbound = {
        ShipmentId: string;
        page: number;
        results: number;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ListShipmentRatesRequest> = z
        .object({
            shipmentId: z.string(),
            page: z.number().int().default(1),
            results: z.number().int().default(25),
        })
        .transform((v) => {
            return {
                ShipmentId: v.shipmentId,
                page: v.page,
                results: v.results,
            };
        });
}
