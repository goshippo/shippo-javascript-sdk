/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type ListCustomsDeclarationsGlobals = {
  /**
   * Optional string used to pick a non-default API version to use. See our <a href="https://docs.goshippo.com/docs/api_concepts/apiversioning/">API version</a> guide.
   */
  shippoApiVersion?: string | undefined;
};

export type ListCustomsDeclarationsRequest = {
  /**
   * The page number you want to select
   */
  page?: number | undefined;
  /**
   * The number of results to return per page (max 100, default 5)
   */
  results?: number | undefined;
};

/** @internal */
export const ListCustomsDeclarationsGlobals$inboundSchema: z.ZodType<
  ListCustomsDeclarationsGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  "SHIPPO-API-VERSION": z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "SHIPPO-API-VERSION": "shippoApiVersion",
  });
});

/** @internal */
export type ListCustomsDeclarationsGlobals$Outbound = {
  "SHIPPO-API-VERSION"?: string | undefined;
};

/** @internal */
export const ListCustomsDeclarationsGlobals$outboundSchema: z.ZodType<
  ListCustomsDeclarationsGlobals$Outbound,
  z.ZodTypeDef,
  ListCustomsDeclarationsGlobals
> = z.object({
  shippoApiVersion: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    shippoApiVersion: "SHIPPO-API-VERSION",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListCustomsDeclarationsGlobals$ {
  /** @deprecated use `ListCustomsDeclarationsGlobals$inboundSchema` instead. */
  export const inboundSchema = ListCustomsDeclarationsGlobals$inboundSchema;
  /** @deprecated use `ListCustomsDeclarationsGlobals$outboundSchema` instead. */
  export const outboundSchema = ListCustomsDeclarationsGlobals$outboundSchema;
  /** @deprecated use `ListCustomsDeclarationsGlobals$Outbound` instead. */
  export type Outbound = ListCustomsDeclarationsGlobals$Outbound;
}

/** @internal */
export const ListCustomsDeclarationsRequest$inboundSchema: z.ZodType<
  ListCustomsDeclarationsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  page: z.number().int().default(1),
  results: z.number().int().default(5),
});

/** @internal */
export type ListCustomsDeclarationsRequest$Outbound = {
  page: number;
  results: number;
};

/** @internal */
export const ListCustomsDeclarationsRequest$outboundSchema: z.ZodType<
  ListCustomsDeclarationsRequest$Outbound,
  z.ZodTypeDef,
  ListCustomsDeclarationsRequest
> = z.object({
  page: z.number().int().default(1),
  results: z.number().int().default(5),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListCustomsDeclarationsRequest$ {
  /** @deprecated use `ListCustomsDeclarationsRequest$inboundSchema` instead. */
  export const inboundSchema = ListCustomsDeclarationsRequest$inboundSchema;
  /** @deprecated use `ListCustomsDeclarationsRequest$outboundSchema` instead. */
  export const outboundSchema = ListCustomsDeclarationsRequest$outboundSchema;
  /** @deprecated use `ListCustomsDeclarationsRequest$Outbound` instead. */
  export type Outbound = ListCustomsDeclarationsRequest$Outbound;
}
