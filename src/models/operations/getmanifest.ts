/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetManifestGlobals = {
  /**
   * Optional string used to pick a non-default API version to use. See our <a href="https://docs.goshippo.com/docs/api_concepts/apiversioning/">API version</a> guide.
   */
  shippoApiVersion?: string | undefined;
};

export type GetManifestRequest = {
  /**
   * Object ID of the manifest to update
   */
  manifestId: string;
};

/** @internal */
export const GetManifestGlobals$inboundSchema: z.ZodType<
  GetManifestGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  "SHIPPO-API-VERSION": z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "SHIPPO-API-VERSION": "shippoApiVersion",
  });
});

/** @internal */
export type GetManifestGlobals$Outbound = {
  "SHIPPO-API-VERSION"?: string | undefined;
};

/** @internal */
export const GetManifestGlobals$outboundSchema: z.ZodType<
  GetManifestGlobals$Outbound,
  z.ZodTypeDef,
  GetManifestGlobals
> = z.object({
  shippoApiVersion: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    shippoApiVersion: "SHIPPO-API-VERSION",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetManifestGlobals$ {
  /** @deprecated use `GetManifestGlobals$inboundSchema` instead. */
  export const inboundSchema = GetManifestGlobals$inboundSchema;
  /** @deprecated use `GetManifestGlobals$outboundSchema` instead. */
  export const outboundSchema = GetManifestGlobals$outboundSchema;
  /** @deprecated use `GetManifestGlobals$Outbound` instead. */
  export type Outbound = GetManifestGlobals$Outbound;
}

export function getManifestGlobalsToJSON(
  getManifestGlobals: GetManifestGlobals,
): string {
  return JSON.stringify(
    GetManifestGlobals$outboundSchema.parse(getManifestGlobals),
  );
}

export function getManifestGlobalsFromJSON(
  jsonString: string,
): SafeParseResult<GetManifestGlobals, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetManifestGlobals$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetManifestGlobals' from JSON`,
  );
}

/** @internal */
export const GetManifestRequest$inboundSchema: z.ZodType<
  GetManifestRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  ManifestId: z.string(),
}).transform((v) => {
  return remap$(v, {
    "ManifestId": "manifestId",
  });
});

/** @internal */
export type GetManifestRequest$Outbound = {
  ManifestId: string;
};

/** @internal */
export const GetManifestRequest$outboundSchema: z.ZodType<
  GetManifestRequest$Outbound,
  z.ZodTypeDef,
  GetManifestRequest
> = z.object({
  manifestId: z.string(),
}).transform((v) => {
  return remap$(v, {
    manifestId: "ManifestId",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetManifestRequest$ {
  /** @deprecated use `GetManifestRequest$inboundSchema` instead. */
  export const inboundSchema = GetManifestRequest$inboundSchema;
  /** @deprecated use `GetManifestRequest$outboundSchema` instead. */
  export const outboundSchema = GetManifestRequest$outboundSchema;
  /** @deprecated use `GetManifestRequest$Outbound` instead. */
  export type Outbound = GetManifestRequest$Outbound;
}

export function getManifestRequestToJSON(
  getManifestRequest: GetManifestRequest,
): string {
  return JSON.stringify(
    GetManifestRequest$outboundSchema.parse(getManifestRequest),
  );
}

export function getManifestRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetManifestRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetManifestRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetManifestRequest' from JSON`,
  );
}
