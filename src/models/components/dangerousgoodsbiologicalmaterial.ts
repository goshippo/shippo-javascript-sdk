/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * Container for specifying the presence of biological material.
 */
export type DangerousGoodsBiologicalMaterial = {
    /**
     * Indicates if the shipment contains biological material.
     */
    contains?: boolean | undefined;
};

/** @internal */
export namespace DangerousGoodsBiologicalMaterial$ {
    export type Inbound = {
        contains?: boolean | undefined;
    };

    export const inboundSchema: z.ZodType<DangerousGoodsBiologicalMaterial, z.ZodTypeDef, Inbound> =
        z
            .object({
                contains: z.boolean().optional(),
            })
            .transform((v) => {
                return {
                    ...(v.contains === undefined ? null : { contains: v.contains }),
                };
            });

    export type Outbound = {
        contains?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        DangerousGoodsBiologicalMaterial
    > = z
        .object({
            contains: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.contains === undefined ? null : { contains: v.contains }),
            };
        });
}
