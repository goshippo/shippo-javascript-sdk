/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * To have insurance cover provided by a carrier directly instead of Shippo's provider (XCover), set provider to `FEDEX`, `UPS`, or `ONTRAC`.
 */
export const ParcelInsuranceProvider = {
  Fedex: "FEDEX",
  Ups: "UPS",
  Ontrac: "ONTRAC",
} as const;
/**
 * To have insurance cover provided by a carrier directly instead of Shippo's provider (XCover), set provider to `FEDEX`, `UPS`, or `ONTRAC`.
 */
export type ParcelInsuranceProvider = ClosedEnum<
  typeof ParcelInsuranceProvider
>;

/**
 * To add insurace to your parcel, specify `amount`, `content` and `currency`. <br><br>If you do not want to add insurance to you parcel, do not set these parameters.
 */
export type ParcelInsurance = {
  /**
   * Declared value of the goods you want to insure.
   */
  amount?: string | undefined;
  /**
   * Description of parcel content.
   */
  content?: string | undefined;
  /**
   * Currency for the amount value. Currently only USD is supported for FedEx and UPS.
   */
  currency?: string | undefined;
  /**
   * To have insurance cover provided by a carrier directly instead of Shippo's provider (XCover), set provider to `FEDEX`, `UPS`, or `ONTRAC`.
   */
  provider?: ParcelInsuranceProvider | undefined;
};

/** @internal */
export const ParcelInsuranceProvider$inboundSchema: z.ZodNativeEnum<
  typeof ParcelInsuranceProvider
> = z.nativeEnum(ParcelInsuranceProvider);

/** @internal */
export const ParcelInsuranceProvider$outboundSchema: z.ZodNativeEnum<
  typeof ParcelInsuranceProvider
> = ParcelInsuranceProvider$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ParcelInsuranceProvider$ {
  /** @deprecated use `ParcelInsuranceProvider$inboundSchema` instead. */
  export const inboundSchema = ParcelInsuranceProvider$inboundSchema;
  /** @deprecated use `ParcelInsuranceProvider$outboundSchema` instead. */
  export const outboundSchema = ParcelInsuranceProvider$outboundSchema;
}

/** @internal */
export const ParcelInsurance$inboundSchema: z.ZodType<
  ParcelInsurance,
  z.ZodTypeDef,
  unknown
> = z.object({
  amount: z.string().optional(),
  content: z.string().optional(),
  currency: z.string().optional(),
  provider: ParcelInsuranceProvider$inboundSchema.optional(),
});

/** @internal */
export type ParcelInsurance$Outbound = {
  amount?: string | undefined;
  content?: string | undefined;
  currency?: string | undefined;
  provider?: string | undefined;
};

/** @internal */
export const ParcelInsurance$outboundSchema: z.ZodType<
  ParcelInsurance$Outbound,
  z.ZodTypeDef,
  ParcelInsurance
> = z.object({
  amount: z.string().optional(),
  content: z.string().optional(),
  currency: z.string().optional(),
  provider: ParcelInsuranceProvider$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ParcelInsurance$ {
  /** @deprecated use `ParcelInsurance$inboundSchema` instead. */
  export const inboundSchema = ParcelInsurance$inboundSchema;
  /** @deprecated use `ParcelInsurance$outboundSchema` instead. */
  export const outboundSchema = ParcelInsurance$outboundSchema;
  /** @deprecated use `ParcelInsurance$Outbound` instead. */
  export type Outbound = ParcelInsurance$Outbound;
}
