/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import {
  CustomsTaxIdentification,
  CustomsTaxIdentification$inboundSchema,
  CustomsTaxIdentification$Outbound,
  CustomsTaxIdentification$outboundSchema,
} from "./customstaxidentification.js";

/**
 * Additional exporter identification that may be required to ship in certain countries
 */
export type CustomsExporterIdentification = {
  /**
   * Economic Operators' Registration and Identification (EORI) number. Must start with a 2 character
   *
   * @remarks
   * country code followed by a 6-17 character alphanumeric identifier (e.g. PL1234567890ABCDE).
   * <a href="https://ec.europa.eu/taxation_customs/business/customs-procedures/general-overview/economic-operators-registration-identification-number-eori_en">More information on EORI.</a>
   */
  eoriNumber?: string | undefined;
  /**
   * Tax identification that may be required to ship in certain countries. Typically used to assess duties on
   *
   * @remarks
   * goods that are crossing a border.
   */
  taxId?: CustomsTaxIdentification | undefined;
};

/** @internal */
export const CustomsExporterIdentification$inboundSchema: z.ZodType<
  CustomsExporterIdentification,
  z.ZodTypeDef,
  unknown
> = z.object({
  eori_number: z.string().optional(),
  tax_id: CustomsTaxIdentification$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "eori_number": "eoriNumber",
    "tax_id": "taxId",
  });
});

/** @internal */
export type CustomsExporterIdentification$Outbound = {
  eori_number?: string | undefined;
  tax_id?: CustomsTaxIdentification$Outbound | undefined;
};

/** @internal */
export const CustomsExporterIdentification$outboundSchema: z.ZodType<
  CustomsExporterIdentification$Outbound,
  z.ZodTypeDef,
  CustomsExporterIdentification
> = z.object({
  eoriNumber: z.string().optional(),
  taxId: CustomsTaxIdentification$outboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    eoriNumber: "eori_number",
    taxId: "tax_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CustomsExporterIdentification$ {
  /** @deprecated use `CustomsExporterIdentification$inboundSchema` instead. */
  export const inboundSchema = CustomsExporterIdentification$inboundSchema;
  /** @deprecated use `CustomsExporterIdentification$outboundSchema` instead. */
  export const outboundSchema = CustomsExporterIdentification$outboundSchema;
  /** @deprecated use `CustomsExporterIdentification$Outbound` instead. */
  export type Outbound = CustomsExporterIdentification$Outbound;
}
