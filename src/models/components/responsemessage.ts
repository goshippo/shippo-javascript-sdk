/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * Message returned with supporting information from a request. In some cases this can be an error message,
 *
 * @remarks
 * for example a timeout from a carrier. If available, the origin of the message is displayed in `source`.
 */
export type ResponseMessage = {
    /**
     * Origin of message
     */
    source?: string | undefined;
    /**
     * Classification of message
     */
    code?: string | undefined;
    /**
     * Message content
     */
    text?: string | undefined;
};

/** @internal */
export namespace ResponseMessage$ {
    export const inboundSchema: z.ZodType<ResponseMessage, z.ZodTypeDef, unknown> = z.object({
        source: z.string().optional(),
        code: z.string().optional(),
        text: z.string().optional(),
    });

    export type Outbound = {
        source?: string | undefined;
        code?: string | undefined;
        text?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ResponseMessage> = z.object({
        source: z.string().optional(),
        code: z.string().optional(),
        text: z.string().optional(),
    });
}
