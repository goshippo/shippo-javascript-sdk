/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * Message returned with supporting information from a request. In some cases this can be an error message,
 *
 * @remarks
 * for example a timeout from a carrier. If available, the origin of the message is displayed in `source`.
 */
export type ResponseMessage = {
  /**
   * Origin of message
   */
  source?: string | undefined;
  /**
   * Classification of message
   */
  code?: string | undefined;
  /**
   * Message content
   */
  text?: string | undefined;
};

/** @internal */
export const ResponseMessage$inboundSchema: z.ZodType<
  ResponseMessage,
  z.ZodTypeDef,
  unknown
> = z.object({
  source: z.string().optional(),
  code: z.string().optional(),
  text: z.string().optional(),
});

/** @internal */
export type ResponseMessage$Outbound = {
  source?: string | undefined;
  code?: string | undefined;
  text?: string | undefined;
};

/** @internal */
export const ResponseMessage$outboundSchema: z.ZodType<
  ResponseMessage$Outbound,
  z.ZodTypeDef,
  ResponseMessage
> = z.object({
  source: z.string().optional(),
  code: z.string().optional(),
  text: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResponseMessage$ {
  /** @deprecated use `ResponseMessage$inboundSchema` instead. */
  export const inboundSchema = ResponseMessage$inboundSchema;
  /** @deprecated use `ResponseMessage$outboundSchema` instead. */
  export const outboundSchema = ResponseMessage$outboundSchema;
  /** @deprecated use `ResponseMessage$Outbound` instead. */
  export type Outbound = ResponseMessage$Outbound;
}
