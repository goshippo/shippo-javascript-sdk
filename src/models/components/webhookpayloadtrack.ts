/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { Track, Track$ } from "./track.js";
import { WebhookEventTypeEnum, WebhookEventTypeEnum$ } from "./webhookeventtypeenum.js";
import * as z from "zod";

/**
 * Content of the webhook posted to the external URL
 */
export type WebhookPayloadTrack = {
    /**
     * Type of event that triggered the webhook.
     */
    event?: WebhookEventTypeEnum | undefined;
    /**
     * Determines whether the webhook is a test webhook or not.
     */
    test?: boolean | undefined;
    data?: Track | undefined;
};

/** @internal */
export namespace WebhookPayloadTrack$ {
    export const inboundSchema: z.ZodType<WebhookPayloadTrack, z.ZodTypeDef, unknown> = z.object({
        event: WebhookEventTypeEnum$.inboundSchema.optional(),
        test: z.boolean().optional(),
        data: Track$.inboundSchema.optional(),
    });

    export type Outbound = {
        event?: string | undefined;
        test?: boolean | undefined;
        data?: Track$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, WebhookPayloadTrack> = z.object({
        event: WebhookEventTypeEnum$.outboundSchema.optional(),
        test: z.boolean().optional(),
        data: Track$.outboundSchema.optional(),
    });
}
