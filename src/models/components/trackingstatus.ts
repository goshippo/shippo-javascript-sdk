/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { TrackingStatusEnum, TrackingStatusEnum$ } from "./trackingstatusenum";
import {
    TrackingStatusLocationBase,
    TrackingStatusLocationBase$,
} from "./trackingstatuslocationbase";
import { TrackingStatusSubstatus, TrackingStatusSubstatus$ } from "./trackingstatussubstatus";
import * as z from "zod";

/**
 * The latest tracking information of this shipment.
 */
export type TrackingStatus = {
    /**
     * An object containing zip, city, state and country information of the tracking event.
     */
    location: TrackingStatusLocationBase;
    objectCreated: Date;
    objectId: string;
    objectUpdated: Date;
    /**
     * Indicates the high level status of the shipment.
     */
    status: TrackingStatusEnum;
    /**
     * A finer-grained classification of the tracking event.
     */
    substatus?: TrackingStatusSubstatus | undefined;
    /**
     * Date and time when the carrier scanned this tracking event. This is displayed in UTC.
     */
    statusDate: Date;
    /**
     * The human-readable description of the status.
     */
    statusDetails: string;
};

/** @internal */
export namespace TrackingStatus$ {
    export type Inbound = {
        location: TrackingStatusLocationBase$.Inbound;
        object_created: string;
        object_id: string;
        object_updated: string;
        status: TrackingStatusEnum;
        substatus?: TrackingStatusSubstatus$.Inbound | undefined;
        status_date: string;
        status_details: string;
    };

    export const inboundSchema: z.ZodType<TrackingStatus, z.ZodTypeDef, Inbound> = z
        .object({
            location: TrackingStatusLocationBase$.inboundSchema,
            object_created: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v)),
            object_id: z.string(),
            object_updated: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v)),
            status: TrackingStatusEnum$,
            substatus: TrackingStatusSubstatus$.inboundSchema.optional(),
            status_date: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v)),
            status_details: z.string(),
        })
        .transform((v) => {
            return {
                location: v.location,
                objectCreated: v.object_created,
                objectId: v.object_id,
                objectUpdated: v.object_updated,
                status: v.status,
                ...(v.substatus === undefined ? null : { substatus: v.substatus }),
                statusDate: v.status_date,
                statusDetails: v.status_details,
            };
        });

    export type Outbound = {
        location: TrackingStatusLocationBase$.Outbound;
        object_created: string;
        object_id: string;
        object_updated: string;
        status: TrackingStatusEnum;
        substatus?: TrackingStatusSubstatus$.Outbound | undefined;
        status_date: string;
        status_details: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, TrackingStatus> = z
        .object({
            location: TrackingStatusLocationBase$.outboundSchema,
            objectCreated: z.date().transform((v) => v.toISOString()),
            objectId: z.string(),
            objectUpdated: z.date().transform((v) => v.toISOString()),
            status: TrackingStatusEnum$,
            substatus: TrackingStatusSubstatus$.outboundSchema.optional(),
            statusDate: z.date().transform((v) => v.toISOString()),
            statusDetails: z.string(),
        })
        .transform((v) => {
            return {
                location: v.location,
                object_created: v.objectCreated,
                object_id: v.objectId,
                object_updated: v.objectUpdated,
                status: v.status,
                ...(v.substatus === undefined ? null : { substatus: v.substatus }),
                status_date: v.statusDate,
                status_details: v.statusDetails,
            };
        });
}
