/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type CarrierAccountRegistrationStatus = {
    carrierAccount?: string | undefined;
    objectCreated?: Date | undefined;
    objectOwner?: string | undefined;
    objectUpdated?: Date | undefined;
    status?: string | undefined;
};

/** @internal */
export namespace CarrierAccountRegistrationStatus$ {
    export type Inbound = {
        carrier_account?: string | undefined;
        object_created?: string | undefined;
        object_owner?: string | undefined;
        object_updated?: string | undefined;
        status?: string | undefined;
    };

    export const inboundSchema: z.ZodType<CarrierAccountRegistrationStatus, z.ZodTypeDef, Inbound> =
        z
            .object({
                carrier_account: z.string().optional(),
                object_created: z
                    .string()
                    .datetime({ offset: true })
                    .transform((v) => new Date(v))
                    .optional(),
                object_owner: z.string().optional(),
                object_updated: z
                    .string()
                    .datetime({ offset: true })
                    .transform((v) => new Date(v))
                    .optional(),
                status: z.string().optional(),
            })
            .transform((v) => {
                return {
                    ...(v.carrier_account === undefined
                        ? null
                        : { carrierAccount: v.carrier_account }),
                    ...(v.object_created === undefined
                        ? null
                        : { objectCreated: v.object_created }),
                    ...(v.object_owner === undefined ? null : { objectOwner: v.object_owner }),
                    ...(v.object_updated === undefined
                        ? null
                        : { objectUpdated: v.object_updated }),
                    ...(v.status === undefined ? null : { status: v.status }),
                };
            });

    export type Outbound = {
        carrier_account?: string | undefined;
        object_created?: string | undefined;
        object_owner?: string | undefined;
        object_updated?: string | undefined;
        status?: string | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CarrierAccountRegistrationStatus
    > = z
        .object({
            carrierAccount: z.string().optional(),
            objectCreated: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            objectOwner: z.string().optional(),
            objectUpdated: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            status: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.carrierAccount === undefined ? null : { carrier_account: v.carrierAccount }),
                ...(v.objectCreated === undefined ? null : { object_created: v.objectCreated }),
                ...(v.objectOwner === undefined ? null : { object_owner: v.objectOwner }),
                ...(v.objectUpdated === undefined ? null : { object_updated: v.objectUpdated }),
                ...(v.status === undefined ? null : { status: v.status }),
            };
        });
}
