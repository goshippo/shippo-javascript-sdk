/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  Transaction,
  Transaction$inboundSchema,
  Transaction$Outbound,
  Transaction$outboundSchema,
} from "./transaction.js";

export type TransactionPaginatedList = {
  next?: string | undefined;
  previous?: string | undefined;
  results?: Array<Transaction> | undefined;
};

/** @internal */
export const TransactionPaginatedList$inboundSchema: z.ZodType<
  TransactionPaginatedList,
  z.ZodTypeDef,
  unknown
> = z.object({
  next: z.string().optional(),
  previous: z.string().optional(),
  results: z.array(Transaction$inboundSchema).optional(),
});

/** @internal */
export type TransactionPaginatedList$Outbound = {
  next?: string | undefined;
  previous?: string | undefined;
  results?: Array<Transaction$Outbound> | undefined;
};

/** @internal */
export const TransactionPaginatedList$outboundSchema: z.ZodType<
  TransactionPaginatedList$Outbound,
  z.ZodTypeDef,
  TransactionPaginatedList
> = z.object({
  next: z.string().optional(),
  previous: z.string().optional(),
  results: z.array(Transaction$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TransactionPaginatedList$ {
  /** @deprecated use `TransactionPaginatedList$inboundSchema` instead. */
  export const inboundSchema = TransactionPaginatedList$inboundSchema;
  /** @deprecated use `TransactionPaginatedList$outboundSchema` instead. */
  export const outboundSchema = TransactionPaginatedList$outboundSchema;
  /** @deprecated use `TransactionPaginatedList$Outbound` instead. */
  export type Outbound = TransactionPaginatedList$Outbound;
}
