/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { CarrierParcelTemplate, CarrierParcelTemplate$ } from "./carrierparceltemplate";
import * as z from "zod";

export type CarrierParcelTemplateList = {
    results?: Array<CarrierParcelTemplate> | undefined;
};

/** @internal */
export namespace CarrierParcelTemplateList$ {
    export const inboundSchema: z.ZodType<CarrierParcelTemplateList, z.ZodTypeDef, unknown> = z
        .object({
            results: z.array(CarrierParcelTemplate$.inboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.results === undefined ? null : { results: v.results }),
            };
        });

    export type Outbound = {
        results?: Array<CarrierParcelTemplate$.Outbound> | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CarrierParcelTemplateList> = z
        .object({
            results: z.array(CarrierParcelTemplate$.outboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.results === undefined ? null : { results: v.results }),
            };
        });
}
