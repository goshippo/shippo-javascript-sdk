/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { Order, Order$ } from "./order.js";
import * as z from "zod";

export type OrderPaginatedList = {
    next?: string | undefined;
    previous?: string | undefined;
    results?: Array<Order> | undefined;
};

/** @internal */
export namespace OrderPaginatedList$ {
    export const inboundSchema: z.ZodType<OrderPaginatedList, z.ZodTypeDef, unknown> = z.object({
        next: z.string().optional(),
        previous: z.string().optional(),
        results: z.array(Order$.inboundSchema).optional(),
    });

    export type Outbound = {
        next?: string | undefined;
        previous?: string | undefined;
        results?: Array<Order$.Outbound> | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, OrderPaginatedList> = z.object({
        next: z.string().optional(),
        previous: z.string().optional(),
        results: z.array(Order$.outboundSchema).optional(),
    });
}
