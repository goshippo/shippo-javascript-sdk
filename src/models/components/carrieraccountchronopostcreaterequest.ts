/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CarrierAccountChronopostCreateRequestParameters = {};

export type CarrierAccountChronopostCreateRequest = {
  carrier?: "chronopost" | undefined;
  parameters: CarrierAccountChronopostCreateRequestParameters;
};

/** @internal */
export const CarrierAccountChronopostCreateRequestParameters$inboundSchema:
  z.ZodType<
    CarrierAccountChronopostCreateRequestParameters,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type CarrierAccountChronopostCreateRequestParameters$Outbound = {};

/** @internal */
export const CarrierAccountChronopostCreateRequestParameters$outboundSchema:
  z.ZodType<
    CarrierAccountChronopostCreateRequestParameters$Outbound,
    z.ZodTypeDef,
    CarrierAccountChronopostCreateRequestParameters
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CarrierAccountChronopostCreateRequestParameters$ {
  /** @deprecated use `CarrierAccountChronopostCreateRequestParameters$inboundSchema` instead. */
  export const inboundSchema =
    CarrierAccountChronopostCreateRequestParameters$inboundSchema;
  /** @deprecated use `CarrierAccountChronopostCreateRequestParameters$outboundSchema` instead. */
  export const outboundSchema =
    CarrierAccountChronopostCreateRequestParameters$outboundSchema;
  /** @deprecated use `CarrierAccountChronopostCreateRequestParameters$Outbound` instead. */
  export type Outbound =
    CarrierAccountChronopostCreateRequestParameters$Outbound;
}

export function carrierAccountChronopostCreateRequestParametersToJSON(
  carrierAccountChronopostCreateRequestParameters:
    CarrierAccountChronopostCreateRequestParameters,
): string {
  return JSON.stringify(
    CarrierAccountChronopostCreateRequestParameters$outboundSchema.parse(
      carrierAccountChronopostCreateRequestParameters,
    ),
  );
}

export function carrierAccountChronopostCreateRequestParametersFromJSON(
  jsonString: string,
): SafeParseResult<
  CarrierAccountChronopostCreateRequestParameters,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CarrierAccountChronopostCreateRequestParameters$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CarrierAccountChronopostCreateRequestParameters' from JSON`,
  );
}

/** @internal */
export const CarrierAccountChronopostCreateRequest$inboundSchema: z.ZodType<
  CarrierAccountChronopostCreateRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  carrier: z.literal("chronopost").optional(),
  parameters: z.lazy(() =>
    CarrierAccountChronopostCreateRequestParameters$inboundSchema
  ),
});

/** @internal */
export type CarrierAccountChronopostCreateRequest$Outbound = {
  carrier: "chronopost";
  parameters: CarrierAccountChronopostCreateRequestParameters$Outbound;
};

/** @internal */
export const CarrierAccountChronopostCreateRequest$outboundSchema: z.ZodType<
  CarrierAccountChronopostCreateRequest$Outbound,
  z.ZodTypeDef,
  CarrierAccountChronopostCreateRequest
> = z.object({
  carrier: z.literal("chronopost").default("chronopost" as const),
  parameters: z.lazy(() =>
    CarrierAccountChronopostCreateRequestParameters$outboundSchema
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CarrierAccountChronopostCreateRequest$ {
  /** @deprecated use `CarrierAccountChronopostCreateRequest$inboundSchema` instead. */
  export const inboundSchema =
    CarrierAccountChronopostCreateRequest$inboundSchema;
  /** @deprecated use `CarrierAccountChronopostCreateRequest$outboundSchema` instead. */
  export const outboundSchema =
    CarrierAccountChronopostCreateRequest$outboundSchema;
  /** @deprecated use `CarrierAccountChronopostCreateRequest$Outbound` instead. */
  export type Outbound = CarrierAccountChronopostCreateRequest$Outbound;
}

export function carrierAccountChronopostCreateRequestToJSON(
  carrierAccountChronopostCreateRequest: CarrierAccountChronopostCreateRequest,
): string {
  return JSON.stringify(
    CarrierAccountChronopostCreateRequest$outboundSchema.parse(
      carrierAccountChronopostCreateRequest,
    ),
  );
}

export function carrierAccountChronopostCreateRequestFromJSON(
  jsonString: string,
): SafeParseResult<CarrierAccountChronopostCreateRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      CarrierAccountChronopostCreateRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CarrierAccountChronopostCreateRequest' from JSON`,
  );
}
