/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { Parcel, Parcel$ } from "./parcel.js";
import * as z from "zod";

export type ParcelPaginatedList = {
    next?: string | undefined;
    previous?: string | undefined;
    results?: Array<Parcel> | undefined;
};

/** @internal */
export namespace ParcelPaginatedList$ {
    export const inboundSchema: z.ZodType<ParcelPaginatedList, z.ZodTypeDef, unknown> = z.object({
        next: z.string().optional(),
        previous: z.string().optional(),
        results: z.array(Parcel$.inboundSchema).optional(),
    });

    export type Outbound = {
        next?: string | undefined;
        previous?: string | undefined;
        results?: Array<Parcel$.Outbound> | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ParcelPaginatedList> = z.object({
        next: z.string().optional(),
        previous: z.string().optional(),
        results: z.array(Parcel$.outboundSchema).optional(),
    });
}
