/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  Parcel,
  Parcel$inboundSchema,
  Parcel$Outbound,
  Parcel$outboundSchema,
} from "./parcel.js";

export type ParcelPaginatedList = {
  next?: string | undefined;
  previous?: string | undefined;
  results?: Array<Parcel> | undefined;
};

/** @internal */
export const ParcelPaginatedList$inboundSchema: z.ZodType<
  ParcelPaginatedList,
  z.ZodTypeDef,
  unknown
> = z.object({
  next: z.string().optional(),
  previous: z.string().optional(),
  results: z.array(Parcel$inboundSchema).optional(),
});

/** @internal */
export type ParcelPaginatedList$Outbound = {
  next?: string | undefined;
  previous?: string | undefined;
  results?: Array<Parcel$Outbound> | undefined;
};

/** @internal */
export const ParcelPaginatedList$outboundSchema: z.ZodType<
  ParcelPaginatedList$Outbound,
  z.ZodTypeDef,
  ParcelPaginatedList
> = z.object({
  next: z.string().optional(),
  previous: z.string().optional(),
  results: z.array(Parcel$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ParcelPaginatedList$ {
  /** @deprecated use `ParcelPaginatedList$inboundSchema` instead. */
  export const inboundSchema = ParcelPaginatedList$inboundSchema;
  /** @deprecated use `ParcelPaginatedList$outboundSchema` instead. */
  export const outboundSchema = ParcelPaginatedList$outboundSchema;
  /** @deprecated use `ParcelPaginatedList$Outbound` instead. */
  export type Outbound = ParcelPaginatedList$Outbound;
}
