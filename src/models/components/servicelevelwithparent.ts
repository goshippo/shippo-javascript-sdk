/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import {
  ServiceLevel,
  ServiceLevel$inboundSchema,
  ServiceLevel$Outbound,
  ServiceLevel$outboundSchema,
} from "./servicelevel.js";

/**
 * Contains details regarding the service level for the given rate.
 */
export type ServiceLevelWithParent = {
  /**
   * Name of the Rate's servicelevel, e.g. `International Priority` or `Standard Post`.
   *
   * @remarks
   * A servicelevel commonly defines the transit time of a Shipment (e.g., Express vs. Standard), along with other properties.
   * These names vary depending on the provider.
   */
  name?: string | undefined;
  /**
   * Further clarification of the service.
   */
  terms?: string | undefined;
  /**
   * Token of the Rate's servicelevel, e.g. `usps_priority` or `fedex_ground`.
   *
   * @remarks
   * See <a href="#tag/Service-Levels">servicelevels</a>.
   */
  token?: string | undefined;
  /**
   * Unique, extended version of the Service Level "token".
   *
   * @remarks
   * Guaranteed to be unique across all Service Levels, and may help offer insight into the specific Service Level it describes.
   */
  extendedToken?: string | undefined;
  parentServicelevel?: ServiceLevel | undefined;
};

/** @internal */
export const ServiceLevelWithParent$inboundSchema: z.ZodType<
  ServiceLevelWithParent,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string().optional(),
  terms: z.string().optional(),
  token: z.string().optional(),
  extended_token: z.string().optional(),
  parent_servicelevel: ServiceLevel$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "extended_token": "extendedToken",
    "parent_servicelevel": "parentServicelevel",
  });
});

/** @internal */
export type ServiceLevelWithParent$Outbound = {
  name?: string | undefined;
  terms?: string | undefined;
  token?: string | undefined;
  extended_token?: string | undefined;
  parent_servicelevel?: ServiceLevel$Outbound | undefined;
};

/** @internal */
export const ServiceLevelWithParent$outboundSchema: z.ZodType<
  ServiceLevelWithParent$Outbound,
  z.ZodTypeDef,
  ServiceLevelWithParent
> = z.object({
  name: z.string().optional(),
  terms: z.string().optional(),
  token: z.string().optional(),
  extendedToken: z.string().optional(),
  parentServicelevel: ServiceLevel$outboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    extendedToken: "extended_token",
    parentServicelevel: "parent_servicelevel",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ServiceLevelWithParent$ {
  /** @deprecated use `ServiceLevelWithParent$inboundSchema` instead. */
  export const inboundSchema = ServiceLevelWithParent$inboundSchema;
  /** @deprecated use `ServiceLevelWithParent$outboundSchema` instead. */
  export const outboundSchema = ServiceLevelWithParent$outboundSchema;
  /** @deprecated use `ServiceLevelWithParent$Outbound` instead. */
  export type Outbound = ServiceLevelWithParent$Outbound;
}
