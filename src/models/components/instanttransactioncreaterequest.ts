/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";
import {
  ShipmentCreateRequest,
  ShipmentCreateRequest$inboundSchema,
  ShipmentCreateRequest$Outbound,
  ShipmentCreateRequest$outboundSchema,
} from "./shipmentcreaterequest.js";

export const LabelFileType = {
  Png: "PNG",
  PNG23x75: "PNG_2.3x7.5",
  Pdf: "PDF",
  PDF23x75: "PDF_2.3x7.5",
  PDF4x6: "PDF_4x6",
  PDF4x8: "PDF_4x8",
  PdfA4: "PDF_A4",
  PdfA6: "PDF_A6",
  Zplii: "ZPLII",
} as const;
export type LabelFileType = ClosedEnum<typeof LabelFileType>;

export type InstantTransactionCreateRequest = {
  async?: boolean | undefined;
  carrierAccount: string;
  labelFileType?: LabelFileType | undefined;
  metadata?: string | undefined;
  servicelevelToken: string;
  shipment: ShipmentCreateRequest;
  order?: string | undefined;
};

/** @internal */
export const LabelFileType$inboundSchema: z.ZodNativeEnum<
  typeof LabelFileType
> = z.nativeEnum(LabelFileType);

/** @internal */
export const LabelFileType$outboundSchema: z.ZodNativeEnum<
  typeof LabelFileType
> = LabelFileType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace LabelFileType$ {
  /** @deprecated use `LabelFileType$inboundSchema` instead. */
  export const inboundSchema = LabelFileType$inboundSchema;
  /** @deprecated use `LabelFileType$outboundSchema` instead. */
  export const outboundSchema = LabelFileType$outboundSchema;
}

/** @internal */
export const InstantTransactionCreateRequest$inboundSchema: z.ZodType<
  InstantTransactionCreateRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  async: z.boolean().default(false),
  carrier_account: z.string(),
  label_file_type: LabelFileType$inboundSchema.optional(),
  metadata: z.string().optional(),
  servicelevel_token: z.string(),
  shipment: ShipmentCreateRequest$inboundSchema,
  order: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "carrier_account": "carrierAccount",
    "label_file_type": "labelFileType",
    "servicelevel_token": "servicelevelToken",
  });
});

/** @internal */
export type InstantTransactionCreateRequest$Outbound = {
  async: boolean;
  carrier_account: string;
  label_file_type?: string | undefined;
  metadata?: string | undefined;
  servicelevel_token: string;
  shipment: ShipmentCreateRequest$Outbound;
  order?: string | undefined;
};

/** @internal */
export const InstantTransactionCreateRequest$outboundSchema: z.ZodType<
  InstantTransactionCreateRequest$Outbound,
  z.ZodTypeDef,
  InstantTransactionCreateRequest
> = z.object({
  async: z.boolean().default(false),
  carrierAccount: z.string(),
  labelFileType: LabelFileType$outboundSchema.optional(),
  metadata: z.string().optional(),
  servicelevelToken: z.string(),
  shipment: ShipmentCreateRequest$outboundSchema,
  order: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    carrierAccount: "carrier_account",
    labelFileType: "label_file_type",
    servicelevelToken: "servicelevel_token",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace InstantTransactionCreateRequest$ {
  /** @deprecated use `InstantTransactionCreateRequest$inboundSchema` instead. */
  export const inboundSchema = InstantTransactionCreateRequest$inboundSchema;
  /** @deprecated use `InstantTransactionCreateRequest$outboundSchema` instead. */
  export const outboundSchema = InstantTransactionCreateRequest$outboundSchema;
  /** @deprecated use `InstantTransactionCreateRequest$Outbound` instead. */
  export type Outbound = InstantTransactionCreateRequest$Outbound;
}
