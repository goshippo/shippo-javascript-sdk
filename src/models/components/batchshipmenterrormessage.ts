/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type BatchShipmentErrorMessage = {
    shipment?: Array<Record<string, Array<string>>> | undefined;
};

/** @internal */
export namespace BatchShipmentErrorMessage$ {
    export const inboundSchema: z.ZodType<BatchShipmentErrorMessage, z.ZodTypeDef, unknown> = z
        .object({
            shipment: z.array(z.record(z.array(z.string()))).optional(),
        })
        .transform((v) => {
            return {
                ...(v.shipment === undefined ? null : { shipment: v.shipment }),
            };
        });

    export type Outbound = {
        shipment?: Array<Record<string, Array<string>>> | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, BatchShipmentErrorMessage> = z
        .object({
            shipment: z.array(z.record(z.array(z.string()))).optional(),
        })
        .transform((v) => {
            return {
                ...(v.shipment === undefined ? null : { shipment: v.shipment }),
            };
        });
}
