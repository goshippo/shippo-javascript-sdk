/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

export type CarrierAccountUPSCreateRequestParameters = {
    billingAddressCity: string;
    billingAddressCountryIso2: string;
    billingAddressState: string;
    billingAddressStreet1: string;
    /**
     * Empty string acceptable for billing_address_street2
     */
    billingAddressStreet2?: string | undefined;
    billingAddressZip: string;
    /**
     * Company name. Full name is acceptable in this field if the user has no company name
     */
    company?: string | undefined;
    email?: string | undefined;
    fullName?: string | undefined;
    /**
     * Needs to be a valid phone number and cannot be null
     */
    phone?: string | undefined;
    /**
     * User's pickup address city.
     */
    pickupAddressCity: string;
    /**
     * User's pickup street 1.
     */
    pickupAddressCountryIso2: string;
    pickupAddressSameAsBillingAddress?: boolean | undefined;
    /**
     * User's pickup address state.
     */
    pickupAddressState: string;
    /**
     * User's pickup address street 1.
     */
    pickupAddressStreet1: string;
    /**
     * User's pickup street 2.
     */
    pickupAddressStreet2?: string | undefined;
    /**
     * User's pickup address zip code.
     */
    pickupAddressZip: string;
    /**
     * Whether the user agrees to the UPS terms and conditions or not. Error 400 will be returned if passed in as false
     */
    upsAgreements: boolean;
};

/** @internal */
export namespace CarrierAccountUPSCreateRequestParameters$ {
    export const inboundSchema: z.ZodType<
        CarrierAccountUPSCreateRequestParameters,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            billing_address_city: z.string(),
            billing_address_country_iso2: z.string(),
            billing_address_state: z.string(),
            billing_address_street1: z.string(),
            billing_address_street2: z.string().optional(),
            billing_address_zip: z.string(),
            company: z.string().optional(),
            email: z.string().optional(),
            full_name: z.string().optional(),
            phone: z.string().optional(),
            pickup_address_city: z.string(),
            pickup_address_country_iso2: z.string(),
            pickup_address_same_as_billing_address: z.boolean().optional(),
            pickup_address_state: z.string(),
            pickup_address_street1: z.string(),
            pickup_address_street2: z.string().optional(),
            pickup_address_zip: z.string(),
            ups_agreements: z.boolean(),
        })
        .transform((v) => {
            return remap$(v, {
                billing_address_city: "billingAddressCity",
                billing_address_country_iso2: "billingAddressCountryIso2",
                billing_address_state: "billingAddressState",
                billing_address_street1: "billingAddressStreet1",
                billing_address_street2: "billingAddressStreet2",
                billing_address_zip: "billingAddressZip",
                full_name: "fullName",
                pickup_address_city: "pickupAddressCity",
                pickup_address_country_iso2: "pickupAddressCountryIso2",
                pickup_address_same_as_billing_address: "pickupAddressSameAsBillingAddress",
                pickup_address_state: "pickupAddressState",
                pickup_address_street1: "pickupAddressStreet1",
                pickup_address_street2: "pickupAddressStreet2",
                pickup_address_zip: "pickupAddressZip",
                ups_agreements: "upsAgreements",
            });
        });

    export type Outbound = {
        billing_address_city: string;
        billing_address_country_iso2: string;
        billing_address_state: string;
        billing_address_street1: string;
        billing_address_street2?: string | undefined;
        billing_address_zip: string;
        company?: string | undefined;
        email?: string | undefined;
        full_name?: string | undefined;
        phone?: string | undefined;
        pickup_address_city: string;
        pickup_address_country_iso2: string;
        pickup_address_same_as_billing_address?: boolean | undefined;
        pickup_address_state: string;
        pickup_address_street1: string;
        pickup_address_street2?: string | undefined;
        pickup_address_zip: string;
        ups_agreements: boolean;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CarrierAccountUPSCreateRequestParameters
    > = z
        .object({
            billingAddressCity: z.string(),
            billingAddressCountryIso2: z.string(),
            billingAddressState: z.string(),
            billingAddressStreet1: z.string(),
            billingAddressStreet2: z.string().optional(),
            billingAddressZip: z.string(),
            company: z.string().optional(),
            email: z.string().optional(),
            fullName: z.string().optional(),
            phone: z.string().optional(),
            pickupAddressCity: z.string(),
            pickupAddressCountryIso2: z.string(),
            pickupAddressSameAsBillingAddress: z.boolean().optional(),
            pickupAddressState: z.string(),
            pickupAddressStreet1: z.string(),
            pickupAddressStreet2: z.string().optional(),
            pickupAddressZip: z.string(),
            upsAgreements: z.boolean(),
        })
        .transform((v) => {
            return remap$(v, {
                billingAddressCity: "billing_address_city",
                billingAddressCountryIso2: "billing_address_country_iso2",
                billingAddressState: "billing_address_state",
                billingAddressStreet1: "billing_address_street1",
                billingAddressStreet2: "billing_address_street2",
                billingAddressZip: "billing_address_zip",
                fullName: "full_name",
                pickupAddressCity: "pickup_address_city",
                pickupAddressCountryIso2: "pickup_address_country_iso2",
                pickupAddressSameAsBillingAddress: "pickup_address_same_as_billing_address",
                pickupAddressState: "pickup_address_state",
                pickupAddressStreet1: "pickup_address_street1",
                pickupAddressStreet2: "pickup_address_street2",
                pickupAddressZip: "pickup_address_zip",
                upsAgreements: "ups_agreements",
            });
        });
}
