/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type CarrierAccountUPSCreateRequestParameters = {
    billingAddressCity: string;
    billingAddressCountryIso2: string;
    billingAddressState: string;
    billingAddressStreet1: string;
    /**
     * Empty string acceptable for billing_address_street2
     */
    billingAddressStreet2?: string | undefined;
    billingAddressZip: string;
    /**
     * Company name. Full name is acceptable in this field if the user has no company name
     */
    company?: string | undefined;
    email?: string | undefined;
    fullName?: string | undefined;
    /**
     * Needs to be a valid phone number and cannot be null
     */
    phone?: string | undefined;
    /**
     * User's pickup address city.
     */
    pickupAddressCity: string;
    /**
     * User's pickup street 1.
     */
    pickupAddressCountryIso2: string;
    pickupAddressSameAsBillingAddress?: boolean | undefined;
    /**
     * User's pickup address state.
     */
    pickupAddressState: string;
    /**
     * User's pickup address street 1.
     */
    pickupAddressStreet1: string;
    /**
     * User's pickup street 2.
     */
    pickupAddressStreet2?: string | undefined;
    /**
     * User's pickup address zip code.
     */
    pickupAddressZip: string;
    /**
     * Whether the user agrees to the UPS terms and conditions or not. Error 400 will be returned if passed in as false
     */
    upsAgreements: boolean;
};

/** @internal */
export namespace CarrierAccountUPSCreateRequestParameters$ {
    export type Inbound = {
        billing_address_city: string;
        billing_address_country_iso2: string;
        billing_address_state: string;
        billing_address_street1: string;
        billing_address_street2?: string | undefined;
        billing_address_zip: string;
        company?: string | undefined;
        email?: string | undefined;
        full_name?: string | undefined;
        phone?: string | undefined;
        pickup_address_city: string;
        pickup_address_country_iso2: string;
        pickup_address_same_as_billing_address?: boolean | undefined;
        pickup_address_state: string;
        pickup_address_street1: string;
        pickup_address_street2?: string | undefined;
        pickup_address_zip: string;
        ups_agreements: boolean;
    };

    export const inboundSchema: z.ZodType<
        CarrierAccountUPSCreateRequestParameters,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            billing_address_city: z.string(),
            billing_address_country_iso2: z.string(),
            billing_address_state: z.string(),
            billing_address_street1: z.string(),
            billing_address_street2: z.string().optional(),
            billing_address_zip: z.string(),
            company: z.string().optional(),
            email: z.string().optional(),
            full_name: z.string().optional(),
            phone: z.string().optional(),
            pickup_address_city: z.string(),
            pickup_address_country_iso2: z.string(),
            pickup_address_same_as_billing_address: z.boolean().optional(),
            pickup_address_state: z.string(),
            pickup_address_street1: z.string(),
            pickup_address_street2: z.string().optional(),
            pickup_address_zip: z.string(),
            ups_agreements: z.boolean(),
        })
        .transform((v) => {
            return {
                billingAddressCity: v.billing_address_city,
                billingAddressCountryIso2: v.billing_address_country_iso2,
                billingAddressState: v.billing_address_state,
                billingAddressStreet1: v.billing_address_street1,
                ...(v.billing_address_street2 === undefined
                    ? null
                    : { billingAddressStreet2: v.billing_address_street2 }),
                billingAddressZip: v.billing_address_zip,
                ...(v.company === undefined ? null : { company: v.company }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.full_name === undefined ? null : { fullName: v.full_name }),
                ...(v.phone === undefined ? null : { phone: v.phone }),
                pickupAddressCity: v.pickup_address_city,
                pickupAddressCountryIso2: v.pickup_address_country_iso2,
                ...(v.pickup_address_same_as_billing_address === undefined
                    ? null
                    : {
                          pickupAddressSameAsBillingAddress:
                              v.pickup_address_same_as_billing_address,
                      }),
                pickupAddressState: v.pickup_address_state,
                pickupAddressStreet1: v.pickup_address_street1,
                ...(v.pickup_address_street2 === undefined
                    ? null
                    : { pickupAddressStreet2: v.pickup_address_street2 }),
                pickupAddressZip: v.pickup_address_zip,
                upsAgreements: v.ups_agreements,
            };
        });

    export type Outbound = {
        billing_address_city: string;
        billing_address_country_iso2: string;
        billing_address_state: string;
        billing_address_street1: string;
        billing_address_street2?: string | undefined;
        billing_address_zip: string;
        company?: string | undefined;
        email?: string | undefined;
        full_name?: string | undefined;
        phone?: string | undefined;
        pickup_address_city: string;
        pickup_address_country_iso2: string;
        pickup_address_same_as_billing_address?: boolean | undefined;
        pickup_address_state: string;
        pickup_address_street1: string;
        pickup_address_street2?: string | undefined;
        pickup_address_zip: string;
        ups_agreements: boolean;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CarrierAccountUPSCreateRequestParameters
    > = z
        .object({
            billingAddressCity: z.string(),
            billingAddressCountryIso2: z.string(),
            billingAddressState: z.string(),
            billingAddressStreet1: z.string(),
            billingAddressStreet2: z.string().optional(),
            billingAddressZip: z.string(),
            company: z.string().optional(),
            email: z.string().optional(),
            fullName: z.string().optional(),
            phone: z.string().optional(),
            pickupAddressCity: z.string(),
            pickupAddressCountryIso2: z.string(),
            pickupAddressSameAsBillingAddress: z.boolean().optional(),
            pickupAddressState: z.string(),
            pickupAddressStreet1: z.string(),
            pickupAddressStreet2: z.string().optional(),
            pickupAddressZip: z.string(),
            upsAgreements: z.boolean(),
        })
        .transform((v) => {
            return {
                billing_address_city: v.billingAddressCity,
                billing_address_country_iso2: v.billingAddressCountryIso2,
                billing_address_state: v.billingAddressState,
                billing_address_street1: v.billingAddressStreet1,
                ...(v.billingAddressStreet2 === undefined
                    ? null
                    : { billing_address_street2: v.billingAddressStreet2 }),
                billing_address_zip: v.billingAddressZip,
                ...(v.company === undefined ? null : { company: v.company }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.fullName === undefined ? null : { full_name: v.fullName }),
                ...(v.phone === undefined ? null : { phone: v.phone }),
                pickup_address_city: v.pickupAddressCity,
                pickup_address_country_iso2: v.pickupAddressCountryIso2,
                ...(v.pickupAddressSameAsBillingAddress === undefined
                    ? null
                    : {
                          pickup_address_same_as_billing_address:
                              v.pickupAddressSameAsBillingAddress,
                      }),
                pickup_address_state: v.pickupAddressState,
                pickup_address_street1: v.pickupAddressStreet1,
                ...(v.pickupAddressStreet2 === undefined
                    ? null
                    : { pickup_address_street2: v.pickupAddressStreet2 }),
                pickup_address_zip: v.pickupAddressZip,
                ups_agreements: v.upsAgreements,
            };
        });
}
