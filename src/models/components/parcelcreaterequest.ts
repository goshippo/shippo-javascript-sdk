/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { DistanceUnitEnum, DistanceUnitEnum$ } from "./distanceunitenum";
import { ParcelTemplateEnumSet, ParcelTemplateEnumSet$ } from "./parceltemplateenumset";
import { WeightUnitEnum, WeightUnitEnum$ } from "./weightunitenum";
import * as z from "zod";

export type ParcelCreateRequest = {
    /**
     * The measure unit used for length, width and height.
     */
    distanceUnit: DistanceUnitEnum;
    /**
     * **Required if template is not specified**<br>
     *
     * @remarks
     * Height of the parcel. Up to six digits in front and four digits after the decimal separator are accepted.
     */
    height: string;
    /**
     * **Required if template is not specified**<br>
     *
     * @remarks
     * Length of the Parcel. Up to six digits in front and four digits after the decimal separator are accepted.
     */
    length: string;
    /**
     * The unit used for weight.
     */
    massUnit: WeightUnitEnum;
    /**
     * If template is passed, `length`, `width`, `height`, and `distance_unit` are not required
     */
    template?: ParcelTemplateEnumSet | undefined;
    /**
     * Weight of the parcel. Up to six digits in front and four digits after the decimal separator are accepted.
     */
    weight: string;
    /**
     * **Required if template is not specified**<br>
     *
     * @remarks
     * Width of the Parcel. Up to six digits in front and four digits after the decimal separator are accepted.
     */
    width: string;
    metadata?: string | undefined;
};

/** @internal */
export namespace ParcelCreateRequest$ {
    export const inboundSchema: z.ZodType<ParcelCreateRequest, z.ZodTypeDef, unknown> = z
        .object({
            distance_unit: DistanceUnitEnum$,
            height: z.string(),
            length: z.string(),
            mass_unit: WeightUnitEnum$,
            template: ParcelTemplateEnumSet$.inboundSchema.optional(),
            weight: z.string(),
            width: z.string(),
            metadata: z.string().optional(),
        })
        .transform((v) => {
            return {
                distanceUnit: v.distance_unit,
                height: v.height,
                length: v.length,
                massUnit: v.mass_unit,
                ...(v.template === undefined ? null : { template: v.template }),
                weight: v.weight,
                width: v.width,
                ...(v.metadata === undefined ? null : { metadata: v.metadata }),
            };
        });

    export type Outbound = {
        distance_unit: DistanceUnitEnum;
        height: string;
        length: string;
        mass_unit: WeightUnitEnum;
        template?: ParcelTemplateEnumSet$.Outbound | undefined;
        weight: string;
        width: string;
        metadata?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ParcelCreateRequest> = z
        .object({
            distanceUnit: DistanceUnitEnum$,
            height: z.string(),
            length: z.string(),
            massUnit: WeightUnitEnum$,
            template: ParcelTemplateEnumSet$.outboundSchema.optional(),
            weight: z.string(),
            width: z.string(),
            metadata: z.string().optional(),
        })
        .transform((v) => {
            return {
                distance_unit: v.distanceUnit,
                height: v.height,
                length: v.length,
                mass_unit: v.massUnit,
                ...(v.template === undefined ? null : { template: v.template }),
                weight: v.weight,
                width: v.width,
                ...(v.metadata === undefined ? null : { metadata: v.metadata }),
            };
        });
}
