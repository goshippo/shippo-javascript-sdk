/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import {
  DistanceUnitEnum,
  DistanceUnitEnum$inboundSchema,
  DistanceUnitEnum$outboundSchema,
} from "./distanceunitenum.js";
import {
  ParcelExtra,
  ParcelExtra$inboundSchema,
  ParcelExtra$Outbound,
  ParcelExtra$outboundSchema,
} from "./parcelextra.js";
import {
  WeightUnitEnum,
  WeightUnitEnum$inboundSchema,
  WeightUnitEnum$outboundSchema,
} from "./weightunitenum.js";

export type ParcelCreateRequest = {
  /**
   * An object holding optional extra services to be requested for each parcel in a multi-piece shipment.
   *
   * @remarks
   * See the <a href="#section/Parcel-Extras">Parcel Extra table below</a> for all available services.
   */
  extra?: ParcelExtra | undefined;
  metadata?: string | undefined;
  /**
   * The unit used for weight.
   */
  massUnit: WeightUnitEnum;
  /**
   * Weight of the parcel. Up to six digits in front and four digits after the decimal separator are accepted.
   */
  weight: string;
  /**
   * The measure unit used for length, width and height.
   */
  distanceUnit: DistanceUnitEnum;
  /**
   * Height of the parcel. Up to six digits in front and four digits after the decimal separator are accepted.
   */
  height: string;
  /**
   * Length of the Parcel. Up to six digits in front and four digits after the decimal separator are accepted.
   */
  length: string;
  /**
   * Width of the Parcel. Up to six digits in front and four digits after the decimal separator are accepted.
   */
  width: string;
};

/** @internal */
export const ParcelCreateRequest$inboundSchema: z.ZodType<
  ParcelCreateRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  extra: ParcelExtra$inboundSchema.optional(),
  metadata: z.string().optional(),
  mass_unit: WeightUnitEnum$inboundSchema,
  weight: z.string(),
  distance_unit: DistanceUnitEnum$inboundSchema,
  height: z.string(),
  length: z.string(),
  width: z.string(),
}).transform((v) => {
  return remap$(v, {
    "mass_unit": "massUnit",
    "distance_unit": "distanceUnit",
  });
});

/** @internal */
export type ParcelCreateRequest$Outbound = {
  extra?: ParcelExtra$Outbound | undefined;
  metadata?: string | undefined;
  mass_unit: string;
  weight: string;
  distance_unit: string;
  height: string;
  length: string;
  width: string;
};

/** @internal */
export const ParcelCreateRequest$outboundSchema: z.ZodType<
  ParcelCreateRequest$Outbound,
  z.ZodTypeDef,
  ParcelCreateRequest
> = z.object({
  extra: ParcelExtra$outboundSchema.optional(),
  metadata: z.string().optional(),
  massUnit: WeightUnitEnum$outboundSchema,
  weight: z.string(),
  distanceUnit: DistanceUnitEnum$outboundSchema,
  height: z.string(),
  length: z.string(),
  width: z.string(),
}).transform((v) => {
  return remap$(v, {
    massUnit: "mass_unit",
    distanceUnit: "distance_unit",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ParcelCreateRequest$ {
  /** @deprecated use `ParcelCreateRequest$inboundSchema` instead. */
  export const inboundSchema = ParcelCreateRequest$inboundSchema;
  /** @deprecated use `ParcelCreateRequest$outboundSchema` instead. */
  export const outboundSchema = ParcelCreateRequest$outboundSchema;
  /** @deprecated use `ParcelCreateRequest$Outbound` instead. */
  export type Outbound = ParcelCreateRequest$Outbound;
}
