/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { CustomsDeclaration, CustomsDeclaration$ } from "./customsdeclaration.js";
import * as z from "zod";

export type CustomsDeclarationPaginatedList = {
    next?: string | undefined;
    previous?: string | undefined;
    results?: Array<CustomsDeclaration> | undefined;
};

/** @internal */
export namespace CustomsDeclarationPaginatedList$ {
    export const inboundSchema: z.ZodType<CustomsDeclarationPaginatedList, z.ZodTypeDef, unknown> =
        z.object({
            next: z.string().optional(),
            previous: z.string().optional(),
            results: z.array(CustomsDeclaration$.inboundSchema).optional(),
        });

    export type Outbound = {
        next?: string | undefined;
        previous?: string | undefined;
        results?: Array<CustomsDeclaration$.Outbound> | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CustomsDeclarationPaginatedList
    > = z.object({
        next: z.string().optional(),
        previous: z.string().optional(),
        results: z.array(CustomsDeclaration$.outboundSchema).optional(),
    });
}
