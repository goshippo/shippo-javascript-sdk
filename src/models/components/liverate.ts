/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type LiveRate = {
  /**
   * Final Rate price, expressed in the currency used in the sender's country.
   */
  amount?: string | undefined;
  /**
   * Final Rate price, expressed in the currency used in the recipient's country.
   */
  amountLocal?: string | undefined;
  /**
   * Currency used in the sender's country, refers to `amount`.
   *
   * @remarks
   * The <a href="http://www.xe.com/iso4217.php">official ISO 4217</a> currency codes are used, e.g. `USD` or `EUR`.
   */
  currency?: string | undefined;
  /**
   * Currency used in the recipient's country, refers to `amount_local`.
   *
   * @remarks
   * The <a href="http://www.xe.com/iso4217.php">official ISO 4217</a> currency codes are used, e.g. `USD` or "EUR".
   */
  currencyLocal?: string | undefined;
  /**
   * The estimated days in transit of the rate that powers the shipping option, if available.
   */
  estimatedDays?: number | undefined;
  /**
   * The name of the service group being returned
   */
  title?: string | undefined;
};

/** @internal */
export const LiveRate$inboundSchema: z.ZodType<
  LiveRate,
  z.ZodTypeDef,
  unknown
> = z.object({
  amount: z.string().optional(),
  amount_local: z.string().optional(),
  currency: z.string().optional(),
  currency_local: z.string().optional(),
  estimated_days: z.number().int().optional(),
  title: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "amount_local": "amountLocal",
    "currency_local": "currencyLocal",
    "estimated_days": "estimatedDays",
  });
});

/** @internal */
export type LiveRate$Outbound = {
  amount?: string | undefined;
  amount_local?: string | undefined;
  currency?: string | undefined;
  currency_local?: string | undefined;
  estimated_days?: number | undefined;
  title?: string | undefined;
};

/** @internal */
export const LiveRate$outboundSchema: z.ZodType<
  LiveRate$Outbound,
  z.ZodTypeDef,
  LiveRate
> = z.object({
  amount: z.string().optional(),
  amountLocal: z.string().optional(),
  currency: z.string().optional(),
  currencyLocal: z.string().optional(),
  estimatedDays: z.number().int().optional(),
  title: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    amountLocal: "amount_local",
    currencyLocal: "currency_local",
    estimatedDays: "estimated_days",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace LiveRate$ {
  /** @deprecated use `LiveRate$inboundSchema` instead. */
  export const inboundSchema = LiveRate$inboundSchema;
  /** @deprecated use `LiveRate$outboundSchema` instead. */
  export const outboundSchema = LiveRate$outboundSchema;
  /** @deprecated use `LiveRate$Outbound` instead. */
  export type Outbound = LiveRate$Outbound;
}
