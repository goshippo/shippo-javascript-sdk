/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
    UPSConnectExistingOwnAccountParameters,
    UPSConnectExistingOwnAccountParameters$,
} from "./upsconnectexistingownaccountparameters";
import * as z from "zod";

export type ConnectExistingOwnAccountRequestParameters =
    | UPSConnectExistingOwnAccountParameters
    | Record<string, any>;

export type ConnectExistingOwnAccountRequest = {
    accountId: string;
    active?: boolean | undefined;
    carrier: string;
    metadata?: string | undefined;
    parameters: UPSConnectExistingOwnAccountParameters | Record<string, any>;
    test?: boolean | undefined;
};

/** @internal */
export namespace ConnectExistingOwnAccountRequestParameters$ {
    export type Inbound = UPSConnectExistingOwnAccountParameters$.Inbound | Record<string, any>;

    export type Outbound = UPSConnectExistingOwnAccountParameters$.Outbound | Record<string, any>;
    export const inboundSchema: z.ZodType<
        ConnectExistingOwnAccountRequestParameters,
        z.ZodTypeDef,
        Inbound
    > = z.union([UPSConnectExistingOwnAccountParameters$.inboundSchema, z.record(z.any())]);
    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        ConnectExistingOwnAccountRequestParameters
    > = z.union([UPSConnectExistingOwnAccountParameters$.outboundSchema, z.record(z.any())]);
}

/** @internal */
export namespace ConnectExistingOwnAccountRequest$ {
    export type Inbound = {
        account_id: string;
        active?: boolean | undefined;
        carrier: string;
        metadata?: string | undefined;
        parameters: UPSConnectExistingOwnAccountParameters$.Inbound | Record<string, any>;
        test?: boolean | undefined;
    };

    export const inboundSchema: z.ZodType<ConnectExistingOwnAccountRequest, z.ZodTypeDef, Inbound> =
        z
            .object({
                account_id: z.string(),
                active: z.boolean().optional(),
                carrier: z.string(),
                metadata: z.string().optional(),
                parameters: z.union([
                    UPSConnectExistingOwnAccountParameters$.inboundSchema,
                    z.record(z.any()),
                ]),
                test: z.boolean().optional(),
            })
            .transform((v) => {
                return {
                    accountId: v.account_id,
                    ...(v.active === undefined ? null : { active: v.active }),
                    carrier: v.carrier,
                    ...(v.metadata === undefined ? null : { metadata: v.metadata }),
                    parameters: v.parameters,
                    ...(v.test === undefined ? null : { test: v.test }),
                };
            });

    export type Outbound = {
        account_id: string;
        active?: boolean | undefined;
        carrier: string;
        metadata?: string | undefined;
        parameters: UPSConnectExistingOwnAccountParameters$.Outbound | Record<string, any>;
        test?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        ConnectExistingOwnAccountRequest
    > = z
        .object({
            accountId: z.string(),
            active: z.boolean().optional(),
            carrier: z.string(),
            metadata: z.string().optional(),
            parameters: z.union([
                UPSConnectExistingOwnAccountParameters$.outboundSchema,
                z.record(z.any()),
            ]),
            test: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                account_id: v.accountId,
                ...(v.active === undefined ? null : { active: v.active }),
                carrier: v.carrier,
                ...(v.metadata === undefined ? null : { metadata: v.metadata }),
                parameters: v.parameters,
                ...(v.test === undefined ? null : { test: v.test }),
            };
        });
}
