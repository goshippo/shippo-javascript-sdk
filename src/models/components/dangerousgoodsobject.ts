/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import {
  DangerousGoodsBiologicalMaterial,
  DangerousGoodsBiologicalMaterial$inboundSchema,
  DangerousGoodsBiologicalMaterial$Outbound,
  DangerousGoodsBiologicalMaterial$outboundSchema,
} from "./dangerousgoodsbiologicalmaterial.js";
import {
  DangerousGoodsLithiumBatteries,
  DangerousGoodsLithiumBatteries$inboundSchema,
  DangerousGoodsLithiumBatteries$Outbound,
  DangerousGoodsLithiumBatteries$outboundSchema,
} from "./dangerousgoodslithiumbatteries.js";

/**
 * Container for specifying the presence of dangerous materials. This is specific to USPS, and if any contents
 *
 * @remarks
 * are provided, only certain USPS service levels will be eligible. For more information, see our
 * <a href="https://docs.goshippo.com/docs/shipments/hazmat/">guide on hazardous or dangerous materials shipping</a>.
 */
export type DangerousGoodsObject = {
  /**
   * Indicates if the shipment contains dangerous goods.
   */
  contains?: boolean | undefined;
  /**
   * Container for specifying the presence of biological material.
   */
  biologicalMaterial?: DangerousGoodsBiologicalMaterial | undefined;
  /**
   * Container for specifying the presence of lithium batteries.
   */
  lithiumBatteries?: DangerousGoodsLithiumBatteries | undefined;
};

/** @internal */
export const DangerousGoodsObject$inboundSchema: z.ZodType<
  DangerousGoodsObject,
  z.ZodTypeDef,
  unknown
> = z.object({
  contains: z.boolean().optional(),
  biological_material: DangerousGoodsBiologicalMaterial$inboundSchema
    .optional(),
  lithium_batteries: DangerousGoodsLithiumBatteries$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "biological_material": "biologicalMaterial",
    "lithium_batteries": "lithiumBatteries",
  });
});

/** @internal */
export type DangerousGoodsObject$Outbound = {
  contains?: boolean | undefined;
  biological_material?: DangerousGoodsBiologicalMaterial$Outbound | undefined;
  lithium_batteries?: DangerousGoodsLithiumBatteries$Outbound | undefined;
};

/** @internal */
export const DangerousGoodsObject$outboundSchema: z.ZodType<
  DangerousGoodsObject$Outbound,
  z.ZodTypeDef,
  DangerousGoodsObject
> = z.object({
  contains: z.boolean().optional(),
  biologicalMaterial: DangerousGoodsBiologicalMaterial$outboundSchema
    .optional(),
  lithiumBatteries: DangerousGoodsLithiumBatteries$outboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    biologicalMaterial: "biological_material",
    lithiumBatteries: "lithium_batteries",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DangerousGoodsObject$ {
  /** @deprecated use `DangerousGoodsObject$inboundSchema` instead. */
  export const inboundSchema = DangerousGoodsObject$inboundSchema;
  /** @deprecated use `DangerousGoodsObject$outboundSchema` instead. */
  export const outboundSchema = DangerousGoodsObject$outboundSchema;
  /** @deprecated use `DangerousGoodsObject$Outbound` instead. */
  export type Outbound = DangerousGoodsObject$Outbound;
}
