/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Indicates how the carrier should proceed in case the shipment can't be delivered.
 *
 * @remarks
 * Allowed values available <a href="#tag/Customs-Declaration-Non-Delivery-Option">here</a>
 */
export const CustomsDeclarationNonDeliveryOptionEnum = {
  Abandon: "ABANDON",
  Return: "RETURN",
} as const;
/**
 * Indicates how the carrier should proceed in case the shipment can't be delivered.
 *
 * @remarks
 * Allowed values available <a href="#tag/Customs-Declaration-Non-Delivery-Option">here</a>
 */
export type CustomsDeclarationNonDeliveryOptionEnum = ClosedEnum<
  typeof CustomsDeclarationNonDeliveryOptionEnum
>;

/** @internal */
export const CustomsDeclarationNonDeliveryOptionEnum$inboundSchema:
  z.ZodNativeEnum<typeof CustomsDeclarationNonDeliveryOptionEnum> = z
    .nativeEnum(CustomsDeclarationNonDeliveryOptionEnum);

/** @internal */
export const CustomsDeclarationNonDeliveryOptionEnum$outboundSchema:
  z.ZodNativeEnum<typeof CustomsDeclarationNonDeliveryOptionEnum> =
    CustomsDeclarationNonDeliveryOptionEnum$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CustomsDeclarationNonDeliveryOptionEnum$ {
  /** @deprecated use `CustomsDeclarationNonDeliveryOptionEnum$inboundSchema` instead. */
  export const inboundSchema =
    CustomsDeclarationNonDeliveryOptionEnum$inboundSchema;
  /** @deprecated use `CustomsDeclarationNonDeliveryOptionEnum$outboundSchema` instead. */
  export const outboundSchema =
    CustomsDeclarationNonDeliveryOptionEnum$outboundSchema;
}
