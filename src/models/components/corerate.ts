/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type CoreRate = {
  /**
   * Final Rate price, expressed in the currency used in the sender's country.
   */
  amount?: string | undefined;
  /**
   * Final Rate price, expressed in the currency used in the recipient's country.
   */
  amountLocal?: string | undefined;
  /**
   * Currency used in the sender's country, refers to `amount`.
   *
   * @remarks
   * The <a href="http://www.xe.com/iso4217.php">official ISO 4217</a> currency codes are used, e.g. `USD` or `EUR`.
   */
  currency?: string | undefined;
  /**
   * Currency used in the recipient's country, refers to `amount_local`.
   *
   * @remarks
   * The <a href="http://www.xe.com/iso4217.php">official ISO 4217</a> currency codes are used, e.g. `USD` or "EUR".
   */
  currencyLocal?: string | undefined;
  /**
   * Unique identifier of the Rate object.
   */
  objectId?: string | undefined;
  /**
   * Carrier offering the rate, e.g., `FedEx` or `Deutsche Post DHL`.
   */
  provider?: string | undefined;
  /**
   * Object ID of the carrier account that has been used to retrieve the rate.
   */
  carrierAccount?: string | undefined;
  /**
   * Service level name, e.g. `Priority Mail` or `FedEx GroundÂ®`.
   *
   * @remarks
   * A service level commonly defines the transit time of a Shipment (e.g., Express vs. Standard),
   * along with other properties.  These names vary depending on the provider.<br>
   * See <a href="#tag/Service-Levels">Service Levels</a>.
   */
  servicelevelName?: string | undefined;
  /**
   * Token of the Rate's servicelevel, e.g. `usps_priority` or `fedex_ground`.
   *
   * @remarks
   * See <a href="#tag/Service-Levels">servicelevels</a>.
   */
  servicelevelToken?: string | undefined;
};

/** @internal */
export const CoreRate$inboundSchema: z.ZodType<
  CoreRate,
  z.ZodTypeDef,
  unknown
> = z.object({
  amount: z.string().optional(),
  amount_local: z.string().optional(),
  currency: z.string().optional(),
  currency_local: z.string().optional(),
  object_id: z.string().optional(),
  provider: z.string().optional(),
  carrier_account: z.string().optional(),
  servicelevel_name: z.string().optional(),
  servicelevel_token: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "amount_local": "amountLocal",
    "currency_local": "currencyLocal",
    "object_id": "objectId",
    "carrier_account": "carrierAccount",
    "servicelevel_name": "servicelevelName",
    "servicelevel_token": "servicelevelToken",
  });
});

/** @internal */
export type CoreRate$Outbound = {
  amount?: string | undefined;
  amount_local?: string | undefined;
  currency?: string | undefined;
  currency_local?: string | undefined;
  object_id?: string | undefined;
  provider?: string | undefined;
  carrier_account?: string | undefined;
  servicelevel_name?: string | undefined;
  servicelevel_token?: string | undefined;
};

/** @internal */
export const CoreRate$outboundSchema: z.ZodType<
  CoreRate$Outbound,
  z.ZodTypeDef,
  CoreRate
> = z.object({
  amount: z.string().optional(),
  amountLocal: z.string().optional(),
  currency: z.string().optional(),
  currencyLocal: z.string().optional(),
  objectId: z.string().optional(),
  provider: z.string().optional(),
  carrierAccount: z.string().optional(),
  servicelevelName: z.string().optional(),
  servicelevelToken: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    amountLocal: "amount_local",
    currencyLocal: "currency_local",
    objectId: "object_id",
    carrierAccount: "carrier_account",
    servicelevelName: "servicelevel_name",
    servicelevelToken: "servicelevel_token",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CoreRate$ {
  /** @deprecated use `CoreRate$inboundSchema` instead. */
  export const inboundSchema = CoreRate$inboundSchema;
  /** @deprecated use `CoreRate$outboundSchema` instead. */
  export const outboundSchema = CoreRate$outboundSchema;
  /** @deprecated use `CoreRate$Outbound` instead. */
  export type Outbound = CoreRate$Outbound;
}
