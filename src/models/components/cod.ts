/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

/**
 * Secured funds include money orders, certified cheques and others (see
 *
 * @remarks
 * <a href="https://www.ups.com/content/us/en/shipping/time/service/value_added/cod.html">UPS</a> for details).
 * If no payment_method inputted the value defaults to "ANY".)
 */
export const PaymentMethod = {
    SecuredFunds: "SECURED_FUNDS",
    Cash: "CASH",
    Any: "ANY",
} as const;
/**
 * Secured funds include money orders, certified cheques and others (see
 *
 * @remarks
 * <a href="https://www.ups.com/content/us/en/shipping/time/service/value_added/cod.html">UPS</a> for details).
 * If no payment_method inputted the value defaults to "ANY".)
 */
export type PaymentMethod = ClosedEnum<typeof PaymentMethod>;

/**
 * Specify collection on delivery details (UPS only).
 */
export type Cod = {
    /**
     * Amount to be collected.
     */
    amount?: string | undefined;
    /**
     * Currency for the amount to be collected. Currently only USD is supported for UPS.
     */
    currency?: string | undefined;
    /**
     * Secured funds include money orders, certified cheques and others (see
     *
     * @remarks
     * <a href="https://www.ups.com/content/us/en/shipping/time/service/value_added/cod.html">UPS</a> for details).
     * If no payment_method inputted the value defaults to "ANY".)
     */
    paymentMethod?: PaymentMethod | undefined;
};

/** @internal */
export namespace PaymentMethod$ {
    export const inboundSchema: z.ZodNativeEnum<typeof PaymentMethod> = z.nativeEnum(PaymentMethod);
    export const outboundSchema: z.ZodNativeEnum<typeof PaymentMethod> = inboundSchema;
}

/** @internal */
export namespace Cod$ {
    export const inboundSchema: z.ZodType<Cod, z.ZodTypeDef, unknown> = z
        .object({
            amount: z.string().optional(),
            currency: z.string().optional(),
            payment_method: PaymentMethod$.inboundSchema.optional(),
        })
        .transform((v) => {
            return remap$(v, {
                payment_method: "paymentMethod",
            });
        });

    export type Outbound = {
        amount?: string | undefined;
        currency?: string | undefined;
        payment_method?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Cod> = z
        .object({
            amount: z.string().optional(),
            currency: z.string().optional(),
            paymentMethod: PaymentMethod$.outboundSchema.optional(),
        })
        .transform((v) => {
            return remap$(v, {
                paymentMethod: "payment_method",
            });
        });
}
