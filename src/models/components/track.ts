/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ServiceLevel, ServiceLevel$ } from "./servicelevel";
import { TrackingStatus, TrackingStatus$ } from "./trackingstatus";
import {
    TrackingStatusLocationBase,
    TrackingStatusLocationBase$,
} from "./trackingstatuslocationbase";
import * as z from "zod";

export type Track = {
    /**
     * The sender address with city, state, zip and country information.
     */
    addressFrom: TrackingStatusLocationBase;
    /**
     * The recipient address with city, state, zip and country information.
     */
    addressTo?: TrackingStatusLocationBase | undefined;
    /**
     * Name of the carrier of the shipment to track. See <a href="#tag/Carriers">Carriers</a>.
     */
    carrier: string;
    /**
     * The estimated time of arrival according to the carrier, this might be updated by carriers during the life of the shipment.
     */
    eta?: Date | undefined;
    messages: Array<string>;
    /**
     * A string of up to 100 characters that can be filled with any additional information you want to attach to the object.
     */
    metadata?: string | undefined;
    /**
     * The estimated time of arrival according to the carrier at the time the shipment first entered the system.
     */
    originalEta?: Date | undefined;
    /**
     * Contains details regarding the service level for the given rate.
     */
    servicelevel: ServiceLevel;
    /**
     * A list of tracking events, following the same structure as <code>tracking_status</code>.
     *
     * @remarks
     * It contains a full history of all tracking statuses, starting with the earlier tracking event first.
     */
    trackingHistory: Array<TrackingStatus>;
    /**
     * Tracking number to track.
     */
    trackingNumber: string;
    /**
     * The latest tracking information of this shipment.
     */
    trackingStatus?: TrackingStatus | undefined;
    /**
     * The <code>object_id</code> of the transaction associated with this tracking object.
     *
     * @remarks
     * This field is visible only to the object owner of the transaction.
     */
    transaction?: string | undefined;
};

/** @internal */
export namespace Track$ {
    export type Inbound = {
        address_from: TrackingStatusLocationBase$.Inbound;
        address_to?: TrackingStatusLocationBase$.Inbound | undefined;
        carrier: string;
        eta?: string | undefined;
        messages: Array<string>;
        metadata?: string | undefined;
        original_eta?: string | undefined;
        servicelevel: ServiceLevel$.Inbound;
        tracking_history: Array<TrackingStatus$.Inbound>;
        tracking_number: string;
        tracking_status?: TrackingStatus$.Inbound | undefined;
        transaction?: string | undefined;
    };

    export const inboundSchema: z.ZodType<Track, z.ZodTypeDef, Inbound> = z
        .object({
            address_from: TrackingStatusLocationBase$.inboundSchema,
            address_to: TrackingStatusLocationBase$.inboundSchema.optional(),
            carrier: z.string(),
            eta: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            messages: z.array(z.string()),
            metadata: z.string().optional(),
            original_eta: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            servicelevel: ServiceLevel$.inboundSchema,
            tracking_history: z.array(TrackingStatus$.inboundSchema),
            tracking_number: z.string(),
            tracking_status: TrackingStatus$.inboundSchema.optional(),
            transaction: z.string().optional(),
        })
        .transform((v) => {
            return {
                addressFrom: v.address_from,
                ...(v.address_to === undefined ? null : { addressTo: v.address_to }),
                carrier: v.carrier,
                ...(v.eta === undefined ? null : { eta: v.eta }),
                messages: v.messages,
                ...(v.metadata === undefined ? null : { metadata: v.metadata }),
                ...(v.original_eta === undefined ? null : { originalEta: v.original_eta }),
                servicelevel: v.servicelevel,
                trackingHistory: v.tracking_history,
                trackingNumber: v.tracking_number,
                ...(v.tracking_status === undefined ? null : { trackingStatus: v.tracking_status }),
                ...(v.transaction === undefined ? null : { transaction: v.transaction }),
            };
        });

    export type Outbound = {
        address_from: TrackingStatusLocationBase$.Outbound;
        address_to?: TrackingStatusLocationBase$.Outbound | undefined;
        carrier: string;
        eta?: string | undefined;
        messages: Array<string>;
        metadata?: string | undefined;
        original_eta?: string | undefined;
        servicelevel: ServiceLevel$.Outbound;
        tracking_history: Array<TrackingStatus$.Outbound>;
        tracking_number: string;
        tracking_status?: TrackingStatus$.Outbound | undefined;
        transaction?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Track> = z
        .object({
            addressFrom: TrackingStatusLocationBase$.outboundSchema,
            addressTo: TrackingStatusLocationBase$.outboundSchema.optional(),
            carrier: z.string(),
            eta: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            messages: z.array(z.string()),
            metadata: z.string().optional(),
            originalEta: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            servicelevel: ServiceLevel$.outboundSchema,
            trackingHistory: z.array(TrackingStatus$.outboundSchema),
            trackingNumber: z.string(),
            trackingStatus: TrackingStatus$.outboundSchema.optional(),
            transaction: z.string().optional(),
        })
        .transform((v) => {
            return {
                address_from: v.addressFrom,
                ...(v.addressTo === undefined ? null : { address_to: v.addressTo }),
                carrier: v.carrier,
                ...(v.eta === undefined ? null : { eta: v.eta }),
                messages: v.messages,
                ...(v.metadata === undefined ? null : { metadata: v.metadata }),
                ...(v.originalEta === undefined ? null : { original_eta: v.originalEta }),
                servicelevel: v.servicelevel,
                tracking_history: v.trackingHistory,
                tracking_number: v.trackingNumber,
                ...(v.trackingStatus === undefined ? null : { tracking_status: v.trackingStatus }),
                ...(v.transaction === undefined ? null : { transaction: v.transaction }),
            };
        });
}
