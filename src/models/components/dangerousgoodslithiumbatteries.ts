/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * Container for specifying the presence of lithium batteries.
 */
export type DangerousGoodsLithiumBatteries = {
    /**
     * Indicates if the shipment contains lithium batteries.
     */
    contains?: boolean | undefined;
};

/** @internal */
export namespace DangerousGoodsLithiumBatteries$ {
    export type Inbound = {
        contains?: boolean | undefined;
    };

    export const inboundSchema: z.ZodType<DangerousGoodsLithiumBatteries, z.ZodTypeDef, Inbound> = z
        .object({
            contains: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.contains === undefined ? null : { contains: v.contains }),
            };
        });

    export type Outbound = {
        contains?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, DangerousGoodsLithiumBatteries> =
        z
            .object({
                contains: z.boolean().optional(),
            })
            .transform((v) => {
                return {
                    ...(v.contains === undefined ? null : { contains: v.contains }),
                };
            });
}
