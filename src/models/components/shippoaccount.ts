/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type ShippoAccount = {
    email: string;
    firstName: string;
    lastName: string;
    companyName?: string | undefined;
    objectCreated?: Date | undefined;
    objectId?: string | undefined;
    objectUpdated?: Date | undefined;
};

/** @internal */
export namespace ShippoAccount$ {
    export const inboundSchema: z.ZodType<ShippoAccount, z.ZodTypeDef, unknown> = z
        .object({
            email: z.string(),
            first_name: z.string(),
            last_name: z.string(),
            company_name: z.string().optional(),
            object_created: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            object_id: z.string().optional(),
            object_updated: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
        })
        .transform((v) => {
            return {
                email: v.email,
                firstName: v.first_name,
                lastName: v.last_name,
                ...(v.company_name === undefined ? null : { companyName: v.company_name }),
                ...(v.object_created === undefined ? null : { objectCreated: v.object_created }),
                ...(v.object_id === undefined ? null : { objectId: v.object_id }),
                ...(v.object_updated === undefined ? null : { objectUpdated: v.object_updated }),
            };
        });

    export type Outbound = {
        email: string;
        first_name: string;
        last_name: string;
        company_name?: string | undefined;
        object_created?: string | undefined;
        object_id?: string | undefined;
        object_updated?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ShippoAccount> = z
        .object({
            email: z.string(),
            firstName: z.string(),
            lastName: z.string(),
            companyName: z.string().optional(),
            objectCreated: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            objectId: z.string().optional(),
            objectUpdated: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
        })
        .transform((v) => {
            return {
                email: v.email,
                first_name: v.firstName,
                last_name: v.lastName,
                ...(v.companyName === undefined ? null : { company_name: v.companyName }),
                ...(v.objectCreated === undefined ? null : { object_created: v.objectCreated }),
                ...(v.objectId === undefined ? null : { object_id: v.objectId }),
                ...(v.objectUpdated === undefined ? null : { object_updated: v.objectUpdated }),
            };
        });
}
