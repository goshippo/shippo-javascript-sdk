/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { CustomsItem, CustomsItem$ } from "./customsitem.js";
import * as z from "zod";

export type CustomsItemPaginatedList = {
    next?: string | undefined;
    previous?: string | undefined;
    results?: Array<CustomsItem> | undefined;
};

/** @internal */
export namespace CustomsItemPaginatedList$ {
    export const inboundSchema: z.ZodType<CustomsItemPaginatedList, z.ZodTypeDef, unknown> =
        z.object({
            next: z.string().optional(),
            previous: z.string().optional(),
            results: z.array(CustomsItem$.inboundSchema).optional(),
        });

    export type Outbound = {
        next?: string | undefined;
        previous?: string | undefined;
        results?: Array<CustomsItem$.Outbound> | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CustomsItemPaginatedList> =
        z.object({
            next: z.string().optional(),
            previous: z.string().optional(),
            results: z.array(CustomsItem$.outboundSchema).optional(),
        });
}
