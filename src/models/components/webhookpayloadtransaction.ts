/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { Transaction, Transaction$ } from "./transaction.js";
import { WebhookEventTypeEnum, WebhookEventTypeEnum$ } from "./webhookeventtypeenum.js";
import * as z from "zod";

/**
 * Content of the webhook posted to the external URL
 */
export type WebhookPayloadTransaction = {
    /**
     * Type of event that triggered the webhook.
     */
    event?: WebhookEventTypeEnum | undefined;
    /**
     * Determines whether the webhook is a test webhook or not.
     */
    test?: boolean | undefined;
    data?: Transaction | undefined;
};

/** @internal */
export namespace WebhookPayloadTransaction$ {
    export const inboundSchema: z.ZodType<WebhookPayloadTransaction, z.ZodTypeDef, unknown> =
        z.object({
            event: WebhookEventTypeEnum$.inboundSchema.optional(),
            test: z.boolean().optional(),
            data: Transaction$.inboundSchema.optional(),
        });

    export type Outbound = {
        event?: string | undefined;
        test?: boolean | undefined;
        data?: Transaction$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, WebhookPayloadTransaction> =
        z.object({
            event: WebhookEventTypeEnum$.outboundSchema.optional(),
            test: z.boolean().optional(),
            data: Transaction$.outboundSchema.optional(),
        });
}
