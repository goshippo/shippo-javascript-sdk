/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * B13A Option details are obtained by filing a B13A Canada Export Declaration via the Canadian Export Reporting System (CERS).
 *
 * @remarks
 * <a href="https://www.cbsa-asfc.gc.ca/services/export/guide-eng.html" target="_blank" rel="noopener noreferrer"> More information on reporting commercial exports from Canada. </a>
 * Allowed values available <a href="#tag/Customs-Declaration-B13A-Filing-Option">here</a>
 */
export const CustomsDeclarationB13AFilingOptionEnum = {
  FiledElectronically: "FILED_ELECTRONICALLY",
  SummaryReporting: "SUMMARY_REPORTING",
  NotRequired: "NOT_REQUIRED",
} as const;
/**
 * B13A Option details are obtained by filing a B13A Canada Export Declaration via the Canadian Export Reporting System (CERS).
 *
 * @remarks
 * <a href="https://www.cbsa-asfc.gc.ca/services/export/guide-eng.html" target="_blank" rel="noopener noreferrer"> More information on reporting commercial exports from Canada. </a>
 * Allowed values available <a href="#tag/Customs-Declaration-B13A-Filing-Option">here</a>
 */
export type CustomsDeclarationB13AFilingOptionEnum = ClosedEnum<
  typeof CustomsDeclarationB13AFilingOptionEnum
>;

/** @internal */
export const CustomsDeclarationB13AFilingOptionEnum$inboundSchema:
  z.ZodNativeEnum<typeof CustomsDeclarationB13AFilingOptionEnum> = z.nativeEnum(
    CustomsDeclarationB13AFilingOptionEnum,
  );

/** @internal */
export const CustomsDeclarationB13AFilingOptionEnum$outboundSchema:
  z.ZodNativeEnum<typeof CustomsDeclarationB13AFilingOptionEnum> =
    CustomsDeclarationB13AFilingOptionEnum$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CustomsDeclarationB13AFilingOptionEnum$ {
  /** @deprecated use `CustomsDeclarationB13AFilingOptionEnum$inboundSchema` instead. */
  export const inboundSchema =
    CustomsDeclarationB13AFilingOptionEnum$inboundSchema;
  /** @deprecated use `CustomsDeclarationB13AFilingOptionEnum$outboundSchema` instead. */
  export const outboundSchema =
    CustomsDeclarationB13AFilingOptionEnum$outboundSchema;
}
