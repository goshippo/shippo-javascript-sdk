/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import { WeightUnitEnum, WeightUnitEnum$ } from "./weightunitenum.js";
import * as z from "zod";

export type UserParcelTemplateWithCarrierTemplateCreateRequest = {
    /**
     * The object representing the carrier parcel template
     */
    template?: string | undefined;
    /**
     * The weight of the package, in units specified by the weight_unit attribute.
     */
    weight?: string | undefined;
    /**
     * The unit used for weight.
     */
    weightUnit?: WeightUnitEnum | undefined;
};

/** @internal */
export namespace UserParcelTemplateWithCarrierTemplateCreateRequest$ {
    export const inboundSchema: z.ZodType<
        UserParcelTemplateWithCarrierTemplateCreateRequest,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            template: z.string().optional(),
            weight: z.string().optional(),
            weight_unit: WeightUnitEnum$.inboundSchema.optional(),
        })
        .transform((v) => {
            return remap$(v, {
                weight_unit: "weightUnit",
            });
        });

    export type Outbound = {
        template?: string | undefined;
        weight?: string | undefined;
        weight_unit?: string | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        UserParcelTemplateWithCarrierTemplateCreateRequest
    > = z
        .object({
            template: z.string().optional(),
            weight: z.string().optional(),
            weightUnit: WeightUnitEnum$.outboundSchema.optional(),
        })
        .transform((v) => {
            return remap$(v, {
                weightUnit: "weight_unit",
            });
        });
}
