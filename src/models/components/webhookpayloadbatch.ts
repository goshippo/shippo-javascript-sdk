/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  WebhookEventTypeEnum,
  WebhookEventTypeEnum$inboundSchema,
  WebhookEventTypeEnum$outboundSchema,
} from "./webhookeventtypeenum.js";

/**
 * Content of the webhook posted to the external URL
 */
export type WebhookPayloadBatch = {
  /**
   * Type of event that triggered the webhook.
   */
  event?: WebhookEventTypeEnum | undefined;
  /**
   * Determines whether the webhook is a test webhook or not.
   */
  test?: boolean | undefined;
  /**
   * A string containing the batch object ID, of the form 'batch {batchId} (created|processing complete)'.
   */
  data?: string | undefined;
};

/** @internal */
export const WebhookPayloadBatch$inboundSchema: z.ZodType<
  WebhookPayloadBatch,
  z.ZodTypeDef,
  unknown
> = z.object({
  event: WebhookEventTypeEnum$inboundSchema.optional(),
  test: z.boolean().optional(),
  data: z.string().optional(),
});

/** @internal */
export type WebhookPayloadBatch$Outbound = {
  event?: string | undefined;
  test?: boolean | undefined;
  data?: string | undefined;
};

/** @internal */
export const WebhookPayloadBatch$outboundSchema: z.ZodType<
  WebhookPayloadBatch$Outbound,
  z.ZodTypeDef,
  WebhookPayloadBatch
> = z.object({
  event: WebhookEventTypeEnum$outboundSchema.optional(),
  test: z.boolean().optional(),
  data: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace WebhookPayloadBatch$ {
  /** @deprecated use `WebhookPayloadBatch$inboundSchema` instead. */
  export const inboundSchema = WebhookPayloadBatch$inboundSchema;
  /** @deprecated use `WebhookPayloadBatch$outboundSchema` instead. */
  export const outboundSchema = WebhookPayloadBatch$outboundSchema;
  /** @deprecated use `WebhookPayloadBatch$Outbound` instead. */
  export type Outbound = WebhookPayloadBatch$Outbound;
}
