/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import {
  FedExConnectExistingOwnAccountParameters,
  FedExConnectExistingOwnAccountParameters$inboundSchema,
  FedExConnectExistingOwnAccountParameters$Outbound,
  FedExConnectExistingOwnAccountParameters$outboundSchema,
} from "./fedexconnectexistingownaccountparameters.js";
import {
  UPSConnectExistingOwnAccountParameters,
  UPSConnectExistingOwnAccountParameters$inboundSchema,
  UPSConnectExistingOwnAccountParameters$Outbound,
  UPSConnectExistingOwnAccountParameters$outboundSchema,
} from "./upsconnectexistingownaccountparameters.js";

export type CarrierAccountBaseParameters =
  | FedExConnectExistingOwnAccountParameters
  | UPSConnectExistingOwnAccountParameters
  | { [k: string]: any };

export type CarrierAccountBase = {
  /**
   * Unique identifier of the account. Please check the <a href="https://docs.goshippo.com/docs/carriers/carrieraccounts/">carrier accounts tutorial</a>
   *
   * @remarks
   * page for the `account_id` per carrier.<br>
   * To protect account information, this field will be masked in any API response.
   */
  accountId: string;
  /**
   * Determines whether the account is active. When creating a shipment, if no `carrier_accounts` are explicitly
   *
   * @remarks
   * passed Shippo will query all carrier accounts that have this field set. By default, this is set to True.
   */
  active?: boolean | undefined;
  /**
   * Carrier token, see <a href="#tag/Carriers">Carriers</a><br>
   *
   * @remarks
   * Please check the <a href="https://docs.goshippo.com/docs/carriers/carrieraccounts/">carrier accounts tutorial</a> page for all supported carriers.
   */
  carrier: string;
  parameters?:
    | FedExConnectExistingOwnAccountParameters
    | UPSConnectExistingOwnAccountParameters
    | { [k: string]: any }
    | undefined;
};

/** @internal */
export const CarrierAccountBaseParameters$inboundSchema: z.ZodType<
  CarrierAccountBaseParameters,
  z.ZodTypeDef,
  unknown
> = z.union([
  FedExConnectExistingOwnAccountParameters$inboundSchema,
  UPSConnectExistingOwnAccountParameters$inboundSchema,
  z.record(z.any()),
]);

/** @internal */
export type CarrierAccountBaseParameters$Outbound =
  | FedExConnectExistingOwnAccountParameters$Outbound
  | UPSConnectExistingOwnAccountParameters$Outbound
  | { [k: string]: any };

/** @internal */
export const CarrierAccountBaseParameters$outboundSchema: z.ZodType<
  CarrierAccountBaseParameters$Outbound,
  z.ZodTypeDef,
  CarrierAccountBaseParameters
> = z.union([
  FedExConnectExistingOwnAccountParameters$outboundSchema,
  UPSConnectExistingOwnAccountParameters$outboundSchema,
  z.record(z.any()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CarrierAccountBaseParameters$ {
  /** @deprecated use `CarrierAccountBaseParameters$inboundSchema` instead. */
  export const inboundSchema = CarrierAccountBaseParameters$inboundSchema;
  /** @deprecated use `CarrierAccountBaseParameters$outboundSchema` instead. */
  export const outboundSchema = CarrierAccountBaseParameters$outboundSchema;
  /** @deprecated use `CarrierAccountBaseParameters$Outbound` instead. */
  export type Outbound = CarrierAccountBaseParameters$Outbound;
}

/** @internal */
export const CarrierAccountBase$inboundSchema: z.ZodType<
  CarrierAccountBase,
  z.ZodTypeDef,
  unknown
> = z.object({
  account_id: z.string(),
  active: z.boolean().optional(),
  carrier: z.string(),
  parameters: z.union([
    FedExConnectExistingOwnAccountParameters$inboundSchema,
    UPSConnectExistingOwnAccountParameters$inboundSchema,
    z.record(z.any()),
  ]).optional(),
}).transform((v) => {
  return remap$(v, {
    "account_id": "accountId",
  });
});

/** @internal */
export type CarrierAccountBase$Outbound = {
  account_id: string;
  active?: boolean | undefined;
  carrier: string;
  parameters?:
    | FedExConnectExistingOwnAccountParameters$Outbound
    | UPSConnectExistingOwnAccountParameters$Outbound
    | { [k: string]: any }
    | undefined;
};

/** @internal */
export const CarrierAccountBase$outboundSchema: z.ZodType<
  CarrierAccountBase$Outbound,
  z.ZodTypeDef,
  CarrierAccountBase
> = z.object({
  accountId: z.string(),
  active: z.boolean().optional(),
  carrier: z.string(),
  parameters: z.union([
    FedExConnectExistingOwnAccountParameters$outboundSchema,
    UPSConnectExistingOwnAccountParameters$outboundSchema,
    z.record(z.any()),
  ]).optional(),
}).transform((v) => {
  return remap$(v, {
    accountId: "account_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CarrierAccountBase$ {
  /** @deprecated use `CarrierAccountBase$inboundSchema` instead. */
  export const inboundSchema = CarrierAccountBase$inboundSchema;
  /** @deprecated use `CarrierAccountBase$outboundSchema` instead. */
  export const outboundSchema = CarrierAccountBase$outboundSchema;
  /** @deprecated use `CarrierAccountBase$Outbound` instead. */
  export type Outbound = CarrierAccountBase$Outbound;
}
