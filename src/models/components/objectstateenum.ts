/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Indicates the validity of the enclosing object
 */
export const ObjectStateEnum = {
  Valid: "VALID",
  Invalid: "INVALID",
} as const;
/**
 * Indicates the validity of the enclosing object
 */
export type ObjectStateEnum = ClosedEnum<typeof ObjectStateEnum>;

/** @internal */
export const ObjectStateEnum$inboundSchema: z.ZodNativeEnum<
  typeof ObjectStateEnum
> = z.nativeEnum(ObjectStateEnum);

/** @internal */
export const ObjectStateEnum$outboundSchema: z.ZodNativeEnum<
  typeof ObjectStateEnum
> = ObjectStateEnum$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ObjectStateEnum$ {
  /** @deprecated use `ObjectStateEnum$inboundSchema` instead. */
  export const inboundSchema = ObjectStateEnum$inboundSchema;
  /** @deprecated use `ObjectStateEnum$outboundSchema` instead. */
  export const outboundSchema = ObjectStateEnum$outboundSchema;
}
