/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * EEL / PFC type of the shipment. For most shipments from the US to CA, `NOEEI_30_36` is applicable; for most
 *
 * @remarks
 * other shipments from the US, `NOEEI_30_37_a` is applicable.
 * Allowed values available <a href="#tag/Customs-Declaration-EELPFC">here</a>
 */
export const CustomsDeclarationEelPfcEnum = {
  NOEEI3037A: "NOEEI_30_37_a",
  NOEEI3037H: "NOEEI_30_37_h",
  NOEEI3037F: "NOEEI_30_37_f",
  Noeei3036: "NOEEI_30_36",
  AesItn: "AES_ITN",
} as const;
/**
 * EEL / PFC type of the shipment. For most shipments from the US to CA, `NOEEI_30_36` is applicable; for most
 *
 * @remarks
 * other shipments from the US, `NOEEI_30_37_a` is applicable.
 * Allowed values available <a href="#tag/Customs-Declaration-EELPFC">here</a>
 */
export type CustomsDeclarationEelPfcEnum = ClosedEnum<
  typeof CustomsDeclarationEelPfcEnum
>;

/** @internal */
export const CustomsDeclarationEelPfcEnum$inboundSchema: z.ZodNativeEnum<
  typeof CustomsDeclarationEelPfcEnum
> = z.nativeEnum(CustomsDeclarationEelPfcEnum);

/** @internal */
export const CustomsDeclarationEelPfcEnum$outboundSchema: z.ZodNativeEnum<
  typeof CustomsDeclarationEelPfcEnum
> = CustomsDeclarationEelPfcEnum$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CustomsDeclarationEelPfcEnum$ {
  /** @deprecated use `CustomsDeclarationEelPfcEnum$inboundSchema` instead. */
  export const inboundSchema = CustomsDeclarationEelPfcEnum$inboundSchema;
  /** @deprecated use `CustomsDeclarationEelPfcEnum$outboundSchema` instead. */
  export const outboundSchema = CustomsDeclarationEelPfcEnum$outboundSchema;
}
