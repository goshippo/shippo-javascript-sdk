/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { WeightUnitEnum, WeightUnitEnum$ } from "./weightunitenum";
import * as z from "zod";

export type LineItemBase = {
    /**
     * Currency of the <code>total_price</code> amount.
     */
    currency?: string | undefined;
    /**
     * Country the item was manufactured in. In the Shippo dashboard, this value will be used ot pre-fill the customs declaration when creating a label for this order.
     */
    manufactureCountry?: string | undefined;
    /**
     * The date and time this item needs to be delivered by, i.e. by when the carrier delivers it to the buyer.
     *
     * @remarks
     * This value is used by some platforms such as eBay to measure a seller's shipping time and performance.
     * It will be displayed in the Shippo dashboard.
     */
    maxDeliveryTime?: Date | undefined;
    /**
     * The date and time this item needs to be fulfilled by, i.e. by when the shipping label needs to be
     *
     * @remarks
     * created and handed over to the carrier. This value is used by some platforms such as eBay to measure
     * a seller's handling time and performance. It will be displayed in the Shippo dashboard.
     */
    maxShipTime?: Date | undefined;
    /**
     * The quantity of this item in this order.
     */
    quantity?: number | undefined;
    /**
     * The stock keeping unit value of this item.
     */
    sku?: string | undefined;
    /**
     * Title of the line item.
     */
    title?: string | undefined;
    /**
     * Total price paid by the buyer for this item (or these items, if quantity > 1).
     */
    totalPrice?: string | undefined;
    /**
     * A variant is a specific variation of an item (e.g. `size M` or `color blue`).
     *
     * @remarks
     * Variants might be exposed as a separate resource in the future too.
     * Currently the variant title is a free text field describing the variant.
     */
    variantTitle?: string | undefined;
    /**
     * Total weight of this/these item(s). Instead of specifying the weight of all items,
     *
     * @remarks
     * you can also set the <code>total_weight</code> value of the order object.
     */
    weight?: string | undefined;
    /**
     * The unit used for weight.
     */
    weightUnit?: WeightUnitEnum | undefined;
};

/** @internal */
export namespace LineItemBase$ {
    export const inboundSchema: z.ZodType<LineItemBase, z.ZodTypeDef, unknown> = z
        .object({
            currency: z.string().optional(),
            manufacture_country: z.string().optional(),
            max_delivery_time: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            max_ship_time: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            quantity: z.number().int().optional(),
            sku: z.string().optional(),
            title: z.string().optional(),
            total_price: z.string().optional(),
            variant_title: z.string().optional(),
            weight: z.string().optional(),
            weight_unit: WeightUnitEnum$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                ...(v.currency === undefined ? null : { currency: v.currency }),
                ...(v.manufacture_country === undefined
                    ? null
                    : { manufactureCountry: v.manufacture_country }),
                ...(v.max_delivery_time === undefined
                    ? null
                    : { maxDeliveryTime: v.max_delivery_time }),
                ...(v.max_ship_time === undefined ? null : { maxShipTime: v.max_ship_time }),
                ...(v.quantity === undefined ? null : { quantity: v.quantity }),
                ...(v.sku === undefined ? null : { sku: v.sku }),
                ...(v.title === undefined ? null : { title: v.title }),
                ...(v.total_price === undefined ? null : { totalPrice: v.total_price }),
                ...(v.variant_title === undefined ? null : { variantTitle: v.variant_title }),
                ...(v.weight === undefined ? null : { weight: v.weight }),
                ...(v.weight_unit === undefined ? null : { weightUnit: v.weight_unit }),
            };
        });

    export type Outbound = {
        currency?: string | undefined;
        manufacture_country?: string | undefined;
        max_delivery_time?: string | undefined;
        max_ship_time?: string | undefined;
        quantity?: number | undefined;
        sku?: string | undefined;
        title?: string | undefined;
        total_price?: string | undefined;
        variant_title?: string | undefined;
        weight?: string | undefined;
        weight_unit?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, LineItemBase> = z
        .object({
            currency: z.string().optional(),
            manufactureCountry: z.string().optional(),
            maxDeliveryTime: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            maxShipTime: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            quantity: z.number().int().optional(),
            sku: z.string().optional(),
            title: z.string().optional(),
            totalPrice: z.string().optional(),
            variantTitle: z.string().optional(),
            weight: z.string().optional(),
            weightUnit: WeightUnitEnum$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                ...(v.currency === undefined ? null : { currency: v.currency }),
                ...(v.manufactureCountry === undefined
                    ? null
                    : { manufacture_country: v.manufactureCountry }),
                ...(v.maxDeliveryTime === undefined
                    ? null
                    : { max_delivery_time: v.maxDeliveryTime }),
                ...(v.maxShipTime === undefined ? null : { max_ship_time: v.maxShipTime }),
                ...(v.quantity === undefined ? null : { quantity: v.quantity }),
                ...(v.sku === undefined ? null : { sku: v.sku }),
                ...(v.title === undefined ? null : { title: v.title }),
                ...(v.totalPrice === undefined ? null : { total_price: v.totalPrice }),
                ...(v.variantTitle === undefined ? null : { variant_title: v.variantTitle }),
                ...(v.weight === undefined ? null : { weight: v.weight }),
                ...(v.weightUnit === undefined ? null : { weight_unit: v.weightUnit }),
            };
        });
}
