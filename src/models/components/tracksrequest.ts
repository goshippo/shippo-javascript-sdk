/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type TracksRequest = {
    /**
     * Name of the carrier of the shipment to track.
     */
    carrier: string;
    /**
     * Tracking number to track.
     */
    trackingNumber: string;
    /**
     * A string of up to 100 characters that can be filled with any additional information you want to attach to the object.
     */
    metadata?: string | undefined;
};

/** @internal */
export namespace TracksRequest$ {
    export type Inbound = {
        carrier: string;
        tracking_number: string;
        metadata?: string | undefined;
    };

    export const inboundSchema: z.ZodType<TracksRequest, z.ZodTypeDef, Inbound> = z
        .object({
            carrier: z.string(),
            tracking_number: z.string(),
            metadata: z.string().optional(),
        })
        .transform((v) => {
            return {
                carrier: v.carrier,
                trackingNumber: v.tracking_number,
                ...(v.metadata === undefined ? null : { metadata: v.metadata }),
            };
        });

    export type Outbound = {
        carrier: string;
        tracking_number: string;
        metadata?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, TracksRequest> = z
        .object({
            carrier: z.string(),
            trackingNumber: z.string(),
            metadata: z.string().optional(),
        })
        .transform((v) => {
            return {
                carrier: v.carrier,
                tracking_number: v.trackingNumber,
                ...(v.metadata === undefined ? null : { metadata: v.metadata }),
            };
        });
}
