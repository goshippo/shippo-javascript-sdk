/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type TracksRequest = {
  /**
   * Name of the carrier of the shipment to track.
   */
  carrier: string;
  /**
   * A string of up to 100 characters that can be filled with any additional information you want to attach to the object.
   */
  metadata?: string | undefined;
  /**
   * Tracking number to track.
   */
  trackingNumber: string;
};

/** @internal */
export const TracksRequest$inboundSchema: z.ZodType<
  TracksRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  carrier: z.string(),
  metadata: z.string().optional(),
  tracking_number: z.string(),
}).transform((v) => {
  return remap$(v, {
    "tracking_number": "trackingNumber",
  });
});

/** @internal */
export type TracksRequest$Outbound = {
  carrier: string;
  metadata?: string | undefined;
  tracking_number: string;
};

/** @internal */
export const TracksRequest$outboundSchema: z.ZodType<
  TracksRequest$Outbound,
  z.ZodTypeDef,
  TracksRequest
> = z.object({
  carrier: z.string(),
  metadata: z.string().optional(),
  trackingNumber: z.string(),
}).transform((v) => {
  return remap$(v, {
    trackingNumber: "tracking_number",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TracksRequest$ {
  /** @deprecated use `TracksRequest$inboundSchema` instead. */
  export const inboundSchema = TracksRequest$inboundSchema;
  /** @deprecated use `TracksRequest$outboundSchema` instead. */
  export const outboundSchema = TracksRequest$outboundSchema;
  /** @deprecated use `TracksRequest$Outbound` instead. */
  export type Outbound = TracksRequest$Outbound;
}
