/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

export type TracksRequest = {
    /**
     * Name of the carrier of the shipment to track.
     */
    carrier: string;
    /**
     * A string of up to 100 characters that can be filled with any additional information you want to attach to the object.
     */
    metadata?: string | undefined;
    /**
     * Tracking number to track.
     */
    trackingNumber: string;
};

/** @internal */
export namespace TracksRequest$ {
    export const inboundSchema: z.ZodType<TracksRequest, z.ZodTypeDef, unknown> = z
        .object({
            carrier: z.string(),
            metadata: z.string().optional(),
            tracking_number: z.string(),
        })
        .transform((v) => {
            return remap$(v, {
                tracking_number: "trackingNumber",
            });
        });

    export type Outbound = {
        carrier: string;
        metadata?: string | undefined;
        tracking_number: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, TracksRequest> = z
        .object({
            carrier: z.string(),
            metadata: z.string().optional(),
            trackingNumber: z.string(),
        })
        .transform((v) => {
            return remap$(v, {
                trackingNumber: "tracking_number",
            });
        });
}
