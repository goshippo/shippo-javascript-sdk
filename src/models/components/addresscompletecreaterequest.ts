/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

/**
 * Address represents the address as retrieved from the database
 */
export type AddressCompleteCreateRequest = {
    /**
     * **required for purchase**<br>
     *
     * @remarks
     * First and Last Name of the addressee
     */
    name: string;
    /**
     * Company Name
     */
    company?: string | undefined;
    /**
     * **required for purchase**<br>
     *
     * @remarks
     * First street line, 35 character limit. Usually street number and street name (except for DHL Germany, see street_no).
     */
    street1: string;
    /**
     * Second street line, 35 character limit.
     */
    street2?: string | undefined;
    /**
     * Third street line, 35 character limit.
     *
     * @remarks
     * Only accepted for USPS international shipments, UPS domestic and UPS international shipments.
     */
    street3?: string | undefined;
    /**
     * Street number of the addressed building.
     *
     * @remarks
     * This field can be included in street1 for all carriers except for DHL Germany.
     */
    streetNo?: string | undefined;
    /**
     * **required for purchase**<br>
     *
     * @remarks
     * Name of a city. When creating a Quote Address, sending a city is optional but will yield more accurate Rates.
     * Please bear in mind that city names may be ambiguous (there are 34 Springfields in the US). Pass in a state
     * or a ZIP code (see below), if known, it will yield more accurate results.
     */
    city: string;
    /**
     * **required for purchase for some countries**<br>
     *
     * @remarks
     * State/Province values are required for shipments from/to the US, AU, and CA. UPS requires province for some
     * countries (i.e Ireland). To receive more accurate quotes, passing this field is recommended. Most carriers
     * only accept two or three character state abbreviations.
     */
    state: string;
    /**
     * **required for purchase**<br>
     *
     * @remarks
     * Postal code of an Address. When creating a Quote Addresses, sending a ZIP is optional but will yield more
     * accurate Rates.
     */
    zip: string;
    /**
     * Example: `US` or `DE`. All accepted values can be found on the
     *
     * @remarks
     * <a href="http://www.iso.org/" target="blank">Official ISO Website</a>.
     * Sending a country is always required.
     */
    country: string;
    /**
     * Addresses containing a phone number allow carriers to call the recipient when delivering the Parcel. This
     *
     * @remarks
     * increases the probability of delivery and helps to avoid accessorial charges after a Parcel has been shipped.
     */
    phone?: string | undefined;
    /**
     * E-mail address of the contact person, RFC3696/5321-compliant.
     */
    email?: string | undefined;
    isResidential?: boolean | undefined;
    /**
     * A string of up to 100 characters that can be filled with any additional information you want
     *
     * @remarks
     * to attach to the object.
     */
    metadata?: string | undefined;
    validate?: boolean | undefined;
};

/** @internal */
export namespace AddressCompleteCreateRequest$ {
    export const inboundSchema: z.ZodType<AddressCompleteCreateRequest, z.ZodTypeDef, unknown> = z
        .object({
            name: z.string(),
            company: z.string().optional(),
            street1: z.string(),
            street2: z.string().optional(),
            street3: z.string().optional(),
            street_no: z.string().optional(),
            city: z.string(),
            state: z.string(),
            zip: z.string(),
            country: z.string(),
            phone: z.string().optional(),
            email: z.string().optional(),
            is_residential: z.boolean().optional(),
            metadata: z.string().optional(),
            validate: z.boolean().optional(),
        })
        .transform((v) => {
            return remap$(v, {
                street_no: "streetNo",
                is_residential: "isResidential",
            });
        });

    export type Outbound = {
        name: string;
        company?: string | undefined;
        street1: string;
        street2?: string | undefined;
        street3?: string | undefined;
        street_no?: string | undefined;
        city: string;
        state: string;
        zip: string;
        country: string;
        phone?: string | undefined;
        email?: string | undefined;
        is_residential?: boolean | undefined;
        metadata?: string | undefined;
        validate?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AddressCompleteCreateRequest> = z
        .object({
            name: z.string(),
            company: z.string().optional(),
            street1: z.string(),
            street2: z.string().optional(),
            street3: z.string().optional(),
            streetNo: z.string().optional(),
            city: z.string(),
            state: z.string(),
            zip: z.string(),
            country: z.string(),
            phone: z.string().optional(),
            email: z.string().optional(),
            isResidential: z.boolean().optional(),
            metadata: z.string().optional(),
            validate: z.boolean().optional(),
        })
        .transform((v) => {
            return remap$(v, {
                streetNo: "street_no",
                isResidential: "is_residential",
            });
        });
}
