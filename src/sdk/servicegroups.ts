/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { serviceGroupsCreate } from "../funcs/serviceGroupsCreate.js";
import { serviceGroupsDelete } from "../funcs/serviceGroupsDelete.js";
import { serviceGroupsList } from "../funcs/serviceGroupsList.js";
import { serviceGroupsUpdate } from "../funcs/serviceGroupsUpdate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import { unwrapAsync } from "../types/fp.js";

export class ServiceGroups extends ClientSDK {
  /**
   * List all service groups
   *
   * @remarks
   * Returns a list of service group objects.
   */
  async list(
    options?: RequestOptions,
  ): Promise<Array<components.ServiceGroup>> {
    return unwrapAsync(serviceGroupsList(
      this,
      options,
    ));
  }

  /**
   * Create a new service group
   *
   * @remarks
   * Creates a new service group.
   */
  async create(
    request: components.ServiceGroupCreateRequest,
    options?: RequestOptions,
  ): Promise<components.ServiceGroup> {
    return unwrapAsync(serviceGroupsCreate(
      this,
      request,
      options,
    ));
  }

  /**
   * Update an existing service group
   *
   * @remarks
   * Updates an existing service group object. <br>The object_id cannot be updated as it is the unique identifier for the object.
   */
  async update(
    request?: components.ServiceGroupUpdateRequest | undefined,
    options?: RequestOptions,
  ): Promise<components.ServiceGroup> {
    return unwrapAsync(serviceGroupsUpdate(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete a service group
   *
   * @remarks
   * Deletes an existing service group using an object ID.
   */
  async delete(
    serviceGroupId: string,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(serviceGroupsDelete(
      this,
      serviceGroupId,
      options,
    ));
  }
}
