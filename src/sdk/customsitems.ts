/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { customsItemsCreate } from "../funcs/customsItemsCreate.js";
import { customsItemsGet } from "../funcs/customsItemsGet.js";
import { customsItemsList } from "../funcs/customsItemsList.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import { unwrapAsync } from "../types/fp.js";

export class CustomsItems extends ClientSDK {
  /**
   * List all customs items
   *
   * @remarks
   * Returns a list all customs items objects.
   */
  async list(
    page?: number | undefined,
    results?: number | undefined,
    options?: RequestOptions,
  ): Promise<components.CustomsItemPaginatedList> {
    return unwrapAsync(customsItemsList(
      this,
      page,
      results,
      options,
    ));
  }

  /**
   * Create a new customs item
   *
   * @remarks
   * Creates a new customs item object.
   */
  async create(
    request: components.CustomsItemCreateRequest,
    options?: RequestOptions,
  ): Promise<components.CustomsItem> {
    return unwrapAsync(customsItemsCreate(
      this,
      request,
      options,
    ));
  }

  /**
   * Retrieve a customs item
   *
   * @remarks
   * Returns an existing customs item using an object ID
   */
  async get(
    customsItemId: string,
    page?: number | undefined,
    options?: RequestOptions,
  ): Promise<components.CustomsItem> {
    return unwrapAsync(customsItemsGet(
      this,
      customsItemId,
      page,
      options,
    ));
  }
}
